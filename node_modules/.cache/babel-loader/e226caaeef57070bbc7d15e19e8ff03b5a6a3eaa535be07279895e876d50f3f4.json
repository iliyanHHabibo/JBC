{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanhabibo/Desktop/JBC/src/pages/Diagnosis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrar os componentes do Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Médias do setor (hardcoded para demonstração)\nconst sectorAverages = {\n  retail: {\n    sales: 500000,\n    cogs: 325000,\n    grossProfit: 175000,\n    opCosts: 100000,\n    operationalProfit: 75000,\n    interest: 10000,\n    taxes: 15000,\n    netProfit: 50000,\n    grossMargin: 35,\n    operationalMargin: 18,\n    netMargin: 8,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 5,\n    debtRatio: 40\n  },\n  manufacturing: {\n    sales: 1200000,\n    cogs: 720000,\n    grossProfit: 480000,\n    opCosts: 240000,\n    operationalProfit: 240000,\n    interest: 30000,\n    taxes: 50000,\n    netProfit: 160000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 3,\n    operationalRentEffort: 10,\n    interestCoverageRatio: 8,\n    debtRatio: 45\n  },\n  services: {\n    sales: 800000,\n    cogs: 320000,\n    grossProfit: 480000,\n    opCosts: 280000,\n    operationalProfit: 200000,\n    interest: 20000,\n    taxes: 40000,\n    netProfit: 140000,\n    grossMargin: 60,\n    operationalMargin: 25,\n    netMargin: 15,\n    rentEffortRatio: 8,\n    operationalRentEffort: 20,\n    interestCoverageRatio: 10,\n    debtRatio: 30\n  },\n  technology: {\n    sales: 1500000,\n    cogs: 450000,\n    grossProfit: 1050000,\n    opCosts: 600000,\n    operationalProfit: 450000,\n    interest: 40000,\n    taxes: 100000,\n    netProfit: 310000,\n    grossMargin: 70,\n    operationalMargin: 30,\n    netMargin: 18,\n    rentEffortRatio: 6,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 12,\n    debtRatio: 25\n  },\n  food: {\n    sales: 600000,\n    cogs: 330000,\n    grossProfit: 270000,\n    opCosts: 180000,\n    operationalProfit: 90000,\n    interest: 15000,\n    taxes: 20000,\n    netProfit: 55000,\n    grossMargin: 45,\n    operationalMargin: 15,\n    netMargin: 7,\n    rentEffortRatio: 7,\n    operationalRentEffort: 18,\n    interestCoverageRatio: 4,\n    debtRatio: 50\n  },\n  construction: {\n    sales: 2000000,\n    cogs: 1400000,\n    grossProfit: 600000,\n    opCosts: 360000,\n    operationalProfit: 240000,\n    interest: 60000,\n    taxes: 80000,\n    netProfit: 100000,\n    grossMargin: 30,\n    operationalMargin: 12,\n    netMargin: 6,\n    rentEffortRatio: 4,\n    operationalRentEffort: 12,\n    interestCoverageRatio: 3,\n    debtRatio: 60\n  },\n  // Valor padrão para setores não especificados\n  default: {\n    sales: 1000000,\n    cogs: 600000,\n    grossProfit: 400000,\n    opCosts: 200000,\n    operationalProfit: 200000,\n    interest: 25000,\n    taxes: 45000,\n    netProfit: 130000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 6,\n    debtRatio: 40\n  }\n};\nconst Diagnosis = () => {\n  _s();\n  const [yearData, setYearData] = useState({\n    2023: null,\n    2024: null,\n    2025: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [kpis, setKpis] = useState({});\n  const [sectorAvg, setSectorAvg] = useState(null);\n  const [growthRates, setGrowthRates] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Recuperar dados do localStorage\n    const data2023 = localStorage.getItem('data2023');\n    const data2024 = localStorage.getItem('data2024');\n    const data2025 = localStorage.getItem('registrationFormData');\n    if (data2025) {\n      const parsedData2025 = JSON.parse(data2025);\n      const parsedData2024 = data2024 ? JSON.parse(data2024) : null;\n      const parsedData2023 = data2023 ? JSON.parse(data2023) : null;\n      setYearData({\n        2023: parsedData2023,\n        2024: parsedData2024,\n        2025: parsedData2025\n      });\n\n      // Calcular KPIs para o ano atual\n      calculateKPIs(parsedData2025);\n\n      // Calcular taxas de crescimento\n      if (parsedData2024 && parsedData2025) {\n        calculateGrowthRates(parsedData2024, parsedData2025);\n      }\n\n      // Definir médias do setor com base no setor do negócio\n      const sectorKey = getSectorKey(parsedData2025.businessSector);\n      setSectorAvg(sectorAverages[sectorKey] || sectorAverages.default);\n    } else {\n      // Redirecionar para o registro se não houver dados\n      navigate('/');\n    }\n    setLoading(false);\n  }, [navigate]);\n\n  // Função para mapear o ID do setor para a chave no objeto sectorAverages\n  const getSectorKey = sectorId => {\n    const sectorMap = {\n      'retail': 'retail',\n      'manufacturing': 'manufacturing',\n      'services': 'services',\n      'technology': 'technology',\n      'food': 'food',\n      'construction': 'construction'\n    };\n    return sectorMap[sectorId] || 'default';\n  };\n\n  // Calcular taxas de crescimento\n  const calculateGrowthRates = (prevYearData, currentYearData) => {\n    const calculateGrowth = (current, previous) => {\n      if (!previous || previous === 0) return 'N/A';\n      return ((current - previous) / previous * 100).toFixed(2);\n    };\n\n    // Converter strings para números\n    const prevSales = parseFloat(prevYearData.sales) || 0;\n    const currentSales = parseFloat(currentYearData.sales) || 0;\n    const prevCogs = parseFloat(prevYearData.costOfGoodsSold) || 0;\n    const currentCogs = parseFloat(currentYearData.costOfGoodsSold) || 0;\n    const prevOpCosts = parseFloat(prevYearData.operationalCosts) || 0;\n    const currentOpCosts = parseFloat(currentYearData.operationalCosts) || 0;\n    const prevInterest = parseFloat(prevYearData.interest) || 0;\n    const currentInterest = parseFloat(currentYearData.interest) || 0;\n    const prevTaxes = parseFloat(prevYearData.taxes) || 0;\n    const currentTaxes = parseFloat(currentYearData.taxes) || 0;\n\n    // Calcular lucros para ambos os anos\n    const prevGrossProfit = prevSales - prevCogs;\n    const currentGrossProfit = currentSales - currentCogs;\n    const prevOperationalProfit = prevGrossProfit - prevOpCosts;\n    const currentOperationalProfit = currentGrossProfit - currentOpCosts;\n    const prevNetProfit = prevOperationalProfit - prevInterest - prevTaxes;\n    const currentNetProfit = currentOperationalProfit - currentInterest - currentTaxes;\n\n    // Calcular taxas de crescimento\n    setGrowthRates({\n      sales: calculateGrowth(currentSales, prevSales),\n      grossProfit: calculateGrowth(currentGrossProfit, prevGrossProfit),\n      operationalProfit: calculateGrowth(currentOperationalProfit, prevOperationalProfit),\n      netProfit: calculateGrowth(currentNetProfit, prevNetProfit)\n    });\n  };\n  const calculateKPIs = data => {\n    // Converter strings para números para cálculos\n    const sales = parseFloat(data.sales) || 0;\n    const cogs = parseFloat(data.costOfGoodsSold) || 0;\n    const opCosts = parseFloat(data.operationalCosts) || 0;\n    const interest = parseFloat(data.interest) || 0;\n    const taxes = parseFloat(data.taxes) || 0;\n    const debt = parseFloat(data.debt) || 0;\n    const assets = parseFloat(data.assets) || 0;\n    const rentPrice = parseFloat(data.rentPrice) || 0;\n\n    // Cálculos de KPIs\n    const grossProfit = sales - cogs;\n    const operationalProfit = grossProfit - opCosts;\n    const netProfit = operationalProfit - interest - taxes;\n    const calculatedKpis = {\n      // Valores absolutos\n      sales,\n      cogs,\n      grossProfit,\n      opCosts,\n      operationalProfit,\n      interest,\n      taxes,\n      netProfit,\n      debt,\n      assets,\n      rentPrice,\n      // Indicadores de Rentabilidade\n      grossMargin: sales > 0 ? (grossProfit / sales * 100).toFixed(2) : 0,\n      operationalMargin: sales > 0 ? (operationalProfit / sales * 100).toFixed(2) : 0,\n      netMargin: sales > 0 ? (netProfit / sales * 100).toFixed(2) : 0,\n      // Indicadores de Eficiência\n      rentEffortRatio: sales > 0 ? (rentPrice * 12 / sales * 100).toFixed(2) : 0,\n      operationalRentEffort: opCosts > 0 ? (rentPrice * 12 / opCosts * 100).toFixed(2) : 0,\n      interestCoverageRatio: interest > 0 ? (operationalProfit / interest).toFixed(2) : 'N/A',\n      debtRatio: assets > 0 ? (debt / assets * 100).toFixed(2) : 0\n    };\n    setKpis(calculatedKpis);\n  };\n\n  // Preparar dados para o gráfico de evolução anual\n  const prepareYearlyData = () => {\n    const years = ['2023', '2024', '2025'];\n\n    // Calcular valores para cada ano\n    const yearlyValues = years.map(year => {\n      if (!yearData[year]) return {\n        sales: 0,\n        grossProfit: 0,\n        operationalProfit: 0,\n        netProfit: 0\n      };\n      const data = yearData[year];\n      const sales = parseFloat(data.sales) || 0;\n      const cogs = parseFloat(data.costOfGoodsSold) || 0;\n      const opCosts = parseFloat(data.operationalCosts) || 0;\n      const interest = parseFloat(data.interest) || 0;\n      const taxes = parseFloat(data.taxes) || 0;\n      const grossProfit = sales - cogs;\n      const operationalProfit = grossProfit - opCosts;\n      const netProfit = operationalProfit - interest - taxes;\n      return {\n        sales,\n        grossProfit,\n        operationalProfit,\n        netProfit\n      };\n    });\n    return {\n      labels: years,\n      datasets: [{\n        label: 'Vendas',\n        data: yearlyValues.map(v => v.sales),\n        backgroundColor: 'rgba(52, 152, 219, 0.7)',\n        borderColor: 'rgba(52, 152, 219, 1)',\n        borderWidth: 1\n      }, {\n        label: 'Lucro Bruto',\n        data: yearlyValues.map(v => v.grossProfit),\n        backgroundColor: 'rgba(46, 204, 113, 0.7)',\n        borderColor: 'rgba(46, 204, 113, 1)',\n        borderWidth: 1\n      }, {\n        label: 'Lucro Operacional',\n        data: yearlyValues.map(v => v.operationalProfit),\n        backgroundColor: 'rgba(155, 89, 182, 0.7)',\n        borderColor: 'rgba(155, 89, 182, 1)',\n        borderWidth: 1\n      }, {\n        label: 'Lucro Líquido',\n        data: yearlyValues.map(v => v.netProfit),\n        backgroundColor: 'rgba(241, 196, 15, 0.7)',\n        borderColor: 'rgba(241, 196, 15, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n\n  // Preparar dados para o gráfico de indicadores financeiros\n  const prepareIndicatorsData = () => {\n    if (!kpis || !sectorAvg) return null;\n    const indicators = ['Taxa de Esforço', 'Renda/Custos Op.', 'Cobertura de Juros', 'Dívida/Ativo'];\n    const companyValues = [parseFloat(kpis.rentEffortRatio) || 0, parseFloat(kpis.operationalRentEffort) || 0, parseFloat(kpis.interestCoverageRatio) || 0, parseFloat(kpis.debtRatio) || 0];\n    const sectorValues = [sectorAvg.rentEffortRatio, sectorAvg.operationalRentEffort, sectorAvg.interestCoverageRatio, sectorAvg.debtRatio];\n    return {\n      labels: indicators,\n      datasets: [{\n        label: 'Sua Empresa',\n        data: companyValues,\n        backgroundColor: 'rgba(52, 152, 219, 0.7)',\n        borderColor: 'rgba(52, 152, 219, 1)',\n        borderWidth: 1\n      }, {\n        label: 'Média do Setor',\n        data: sectorValues,\n        backgroundColor: 'rgba(231, 76, 60, 0.7)',\n        borderColor: 'rgba(231, 76, 60, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n              }).format(context.parsed.y);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function (value) {\n            return new Intl.NumberFormat('pt-PT', {\n              style: 'currency',\n              currency: 'EUR',\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0\n            }).format(value);\n          }\n        }\n      }\n    }\n  };\n  const indicatorChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: \"A carregar a an\\xE1lise...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 12\n    }, this);\n  }\n  if (!yearData[2025]) {\n    return /*#__PURE__*/_jsxDEV(ErrorContainer, {\n      children: \"N\\xE3o foram encontrados dados de registo. Por favor, complete o registo primeiro.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(DiagnosisTitle, {\n        children: \"An\\xE1lise da Sua Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Evolu\\xE7\\xE3o Financeira (2023-2025)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: prepareYearlyData(),\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinancialSummary, {\n          children: [/*#__PURE__*/_jsxDEV(SummaryTable, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9trica\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9dia do Setor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Crescimento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Vendas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.sales)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.sales) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass(growthRates.sales),\n                  children: growthRates.sales !== 'N/A' ? `${growthRates.sales}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Custo da Mercadoria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.cogs)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.cogs) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro Bruto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.grossProfit)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.grossProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass(growthRates.grossProfit),\n                  children: growthRates.grossProfit !== 'N/A' ? `${growthRates.grossProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem Bruta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.grossMargin, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.grossMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Custos Operacionais\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.opCosts)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.opCosts) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro Operacional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.operationalProfit)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass(growthRates.operationalProfit),\n                  children: growthRates.operationalProfit !== 'N/A' ? `${growthRates.operationalProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem Operacional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.operationalMargin, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Juros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.interest)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.interest) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Impostos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.taxes)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.taxes) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro L\\xEDquido\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(kpis.netProfit)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.netProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass(growthRates.netProfit),\n                  children: growthRates.netProfit !== 'N/A' ? `${growthRates.netProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem L\\xEDquida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.netMargin, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.netMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Indicador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9dia do Setor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Taxa de Esfor\\xE7o (Renda/Vendas)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.rentEffortRatio, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.rentEffortRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Renda/Custos Operacionais\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.operationalRentEffort, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalRentEffort) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"\\xCDndice de Cobertura de Juros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: kpis.interestCoverageRatio\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.interestCoverageRatio) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"D\\xEDvida/Ativo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [kpis.debtRatio, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.debtRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Indicadores Financeiros vs. M\\xE9dia do Setor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: prepareIndicatorsData(),\n            options: indicatorChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n};\n\n// Função auxiliar para formatar valores monetários\n_s(Diagnosis, \"Wy8AaFh166btT02Cxsq/qE4Rlyc=\", false, function () {\n  return [useNavigate];\n});\n_c = Diagnosis;\nconst formatCurrency = value => {\n  return new Intl.NumberFormat('pt-PT', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Função para determinar a classe CSS com base na taxa de crescimento\nconst getGrowthClass = growthRate => {\n  if (growthRate === 'N/A') return '';\n  const rate = parseFloat(growthRate);\n  if (rate > 0) return 'positive-growth';\n  if (rate < 0) return 'negative-growth';\n  return '';\n};\n\n// Styled Components\nconst PageContainer = styled.div`\n  padding: 40px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n`;\n_c2 = PageContainer;\nconst MainContent = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c3 = MainContent;\nconst DiagnosisTitle = styled.h1`\n  color: #2c3e50;\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  font-family: 'Playfair Display', serif;\n`;\n_c4 = DiagnosisTitle;\nconst SectionCard = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  padding: 30px;\n  margin-bottom: 30px;\n`;\n_c5 = SectionCard;\nconst SectionTitle = styled.h2`\n  color: #2c3e50;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c6 = SectionTitle;\nconst ChartContainer = styled.div`\n  height: 400px;\n  margin-bottom: 20px;\n`;\n_c7 = ChartContainer;\nconst FinancialSummary = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c8 = FinancialSummary;\nconst SummaryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  \n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #ecf0f1;\n  }\n  \n  th {\n    background-color: #f8f9fa;\n    font-weight: 600;\n    color: #2c3e50;\n  }\n  \n  tr.highlight {\n    font-weight: 600;\n    background-color: #f1f8ff;\n  }\n  \n  tr.ratio {\n    font-style: italic;\n    color: #7f8c8d;\n  }\n  \n  td.positive-growth {\n    color: #27ae60;\n    font-weight: 600;\n  }\n  \n  td.negative-growth {\n    color: #e74c3c;\n    font-weight: 600;\n  }\n  \n  @media (min-width: 769px) {\n    flex: 1;\n  }\n`;\n_c9 = SummaryTable;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 24px;\n  color: #3498db;\n`;\n_c10 = LoadingContainer;\nconst ErrorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 20px;\n  color: #e74c3c;\n  text-align: center;\n  padding: 0 20px;\n`;\n_c11 = ErrorContainer;\nexport default Diagnosis;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Diagnosis\");\n$RefreshReg$(_c2, \"PageContainer\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"DiagnosisTitle\");\n$RefreshReg$(_c5, \"SectionCard\");\n$RefreshReg$(_c6, \"SectionTitle\");\n$RefreshReg$(_c7, \"ChartContainer\");\n$RefreshReg$(_c8, \"FinancialSummary\");\n$RefreshReg$(_c9, \"SummaryTable\");\n$RefreshReg$(_c10, \"LoadingContainer\");\n$RefreshReg$(_c11, \"ErrorContainer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","sectorAverages","retail","sales","cogs","grossProfit","opCosts","operationalProfit","interest","taxes","netProfit","grossMargin","operationalMargin","netMargin","rentEffortRatio","operationalRentEffort","interestCoverageRatio","debtRatio","manufacturing","services","technology","food","construction","default","Diagnosis","_s","yearData","setYearData","loading","setLoading","kpis","setKpis","sectorAvg","setSectorAvg","growthRates","setGrowthRates","navigate","data2023","localStorage","getItem","data2024","data2025","parsedData2025","JSON","parse","parsedData2024","parsedData2023","calculateKPIs","calculateGrowthRates","sectorKey","getSectorKey","businessSector","sectorId","sectorMap","prevYearData","currentYearData","calculateGrowth","current","previous","toFixed","prevSales","parseFloat","currentSales","prevCogs","costOfGoodsSold","currentCogs","prevOpCosts","operationalCosts","currentOpCosts","prevInterest","currentInterest","prevTaxes","currentTaxes","prevGrossProfit","currentGrossProfit","prevOperationalProfit","currentOperationalProfit","prevNetProfit","currentNetProfit","data","debt","assets","rentPrice","calculatedKpis","prepareYearlyData","years","yearlyValues","map","year","labels","datasets","label","v","backgroundColor","borderColor","borderWidth","prepareIndicatorsData","indicators","companyValues","sectorValues","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","dataset","parsed","y","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","scales","beginAtZero","ticks","callback","value","indicatorChartOptions","LoadingContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","ErrorContainer","PageContainer","MainContent","DiagnosisTitle","SectionCard","SectionTitle","ChartContainer","options","FinancialSummary","SummaryTable","formatCurrency","className","getGrowthClass","_c","growthRate","rate","div","_c2","main","_c3","h1","_c4","_c5","h2","_c6","_c7","_c8","table","_c9","_c10","_c11","$RefreshReg$"],"sources":["/Users/iliyanhabibo/Desktop/JBC/src/pages/Diagnosis.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  Tooltip, \n  Legend \n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrar os componentes do Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Médias do setor (hardcoded para demonstração)\nconst sectorAverages = {\n  retail: {\n    sales: 500000,\n    cogs: 325000,\n    grossProfit: 175000,\n    opCosts: 100000,\n    operationalProfit: 75000,\n    interest: 10000,\n    taxes: 15000,\n    netProfit: 50000,\n    grossMargin: 35,\n    operationalMargin: 18,\n    netMargin: 8,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 5,\n    debtRatio: 40\n  },\n  manufacturing: {\n    sales: 1200000,\n    cogs: 720000,\n    grossProfit: 480000,\n    opCosts: 240000,\n    operationalProfit: 240000,\n    interest: 30000,\n    taxes: 50000,\n    netProfit: 160000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 3,\n    operationalRentEffort: 10,\n    interestCoverageRatio: 8,\n    debtRatio: 45\n  },\n  services: {\n    sales: 800000,\n    cogs: 320000,\n    grossProfit: 480000,\n    opCosts: 280000,\n    operationalProfit: 200000,\n    interest: 20000,\n    taxes: 40000,\n    netProfit: 140000,\n    grossMargin: 60,\n    operationalMargin: 25,\n    netMargin: 15,\n    rentEffortRatio: 8,\n    operationalRentEffort: 20,\n    interestCoverageRatio: 10,\n    debtRatio: 30\n  },\n  technology: {\n    sales: 1500000,\n    cogs: 450000,\n    grossProfit: 1050000,\n    opCosts: 600000,\n    operationalProfit: 450000,\n    interest: 40000,\n    taxes: 100000,\n    netProfit: 310000,\n    grossMargin: 70,\n    operationalMargin: 30,\n    netMargin: 18,\n    rentEffortRatio: 6,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 12,\n    debtRatio: 25\n  },\n  food: {\n    sales: 600000,\n    cogs: 330000,\n    grossProfit: 270000,\n    opCosts: 180000,\n    operationalProfit: 90000,\n    interest: 15000,\n    taxes: 20000,\n    netProfit: 55000,\n    grossMargin: 45,\n    operationalMargin: 15,\n    netMargin: 7,\n    rentEffortRatio: 7,\n    operationalRentEffort: 18,\n    interestCoverageRatio: 4,\n    debtRatio: 50\n  },\n  construction: {\n    sales: 2000000,\n    cogs: 1400000,\n    grossProfit: 600000,\n    opCosts: 360000,\n    operationalProfit: 240000,\n    interest: 60000,\n    taxes: 80000,\n    netProfit: 100000,\n    grossMargin: 30,\n    operationalMargin: 12,\n    netMargin: 6,\n    rentEffortRatio: 4,\n    operationalRentEffort: 12,\n    interestCoverageRatio: 3,\n    debtRatio: 60\n  },\n  // Valor padrão para setores não especificados\n  default: {\n    sales: 1000000,\n    cogs: 600000,\n    grossProfit: 400000,\n    opCosts: 200000,\n    operationalProfit: 200000,\n    interest: 25000,\n    taxes: 45000,\n    netProfit: 130000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 6,\n    debtRatio: 40\n  }\n};\n\nconst Diagnosis = () => {\n  const [yearData, setYearData] = useState({\n    2023: null,\n    2024: null,\n    2025: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [kpis, setKpis] = useState({});\n  const [sectorAvg, setSectorAvg] = useState(null);\n  const [growthRates, setGrowthRates] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Recuperar dados do localStorage\n    const data2023 = localStorage.getItem('data2023');\n    const data2024 = localStorage.getItem('data2024');\n    const data2025 = localStorage.getItem('registrationFormData');\n    \n    if (data2025) {\n      const parsedData2025 = JSON.parse(data2025);\n      const parsedData2024 = data2024 ? JSON.parse(data2024) : null;\n      const parsedData2023 = data2023 ? JSON.parse(data2023) : null;\n      \n      setYearData({\n        2023: parsedData2023,\n        2024: parsedData2024,\n        2025: parsedData2025\n      });\n      \n      // Calcular KPIs para o ano atual\n      calculateKPIs(parsedData2025);\n      \n      // Calcular taxas de crescimento\n      if (parsedData2024 && parsedData2025) {\n        calculateGrowthRates(parsedData2024, parsedData2025);\n      }\n      \n      // Definir médias do setor com base no setor do negócio\n      const sectorKey = getSectorKey(parsedData2025.businessSector);\n      setSectorAvg(sectorAverages[sectorKey] || sectorAverages.default);\n    } else {\n      // Redirecionar para o registro se não houver dados\n      navigate('/');\n    }\n    \n    setLoading(false);\n  }, [navigate]);\n\n  // Função para mapear o ID do setor para a chave no objeto sectorAverages\n  const getSectorKey = (sectorId) => {\n    const sectorMap = {\n      'retail': 'retail',\n      'manufacturing': 'manufacturing',\n      'services': 'services',\n      'technology': 'technology',\n      'food': 'food',\n      'construction': 'construction'\n    };\n    \n    return sectorMap[sectorId] || 'default';\n  };\n\n  // Calcular taxas de crescimento\n  const calculateGrowthRates = (prevYearData, currentYearData) => {\n    const calculateGrowth = (current, previous) => {\n      if (!previous || previous === 0) return 'N/A';\n      return (((current - previous) / previous) * 100).toFixed(2);\n    };\n    \n    // Converter strings para números\n    const prevSales = parseFloat(prevYearData.sales) || 0;\n    const currentSales = parseFloat(currentYearData.sales) || 0;\n    \n    const prevCogs = parseFloat(prevYearData.costOfGoodsSold) || 0;\n    const currentCogs = parseFloat(currentYearData.costOfGoodsSold) || 0;\n    \n    const prevOpCosts = parseFloat(prevYearData.operationalCosts) || 0;\n    const currentOpCosts = parseFloat(currentYearData.operationalCosts) || 0;\n    \n    const prevInterest = parseFloat(prevYearData.interest) || 0;\n    const currentInterest = parseFloat(currentYearData.interest) || 0;\n    \n    const prevTaxes = parseFloat(prevYearData.taxes) || 0;\n    const currentTaxes = parseFloat(currentYearData.taxes) || 0;\n    \n    // Calcular lucros para ambos os anos\n    const prevGrossProfit = prevSales - prevCogs;\n    const currentGrossProfit = currentSales - currentCogs;\n    \n    const prevOperationalProfit = prevGrossProfit - prevOpCosts;\n    const currentOperationalProfit = currentGrossProfit - currentOpCosts;\n    \n    const prevNetProfit = prevOperationalProfit - prevInterest - prevTaxes;\n    const currentNetProfit = currentOperationalProfit - currentInterest - currentTaxes;\n    \n    // Calcular taxas de crescimento\n    setGrowthRates({\n      sales: calculateGrowth(currentSales, prevSales),\n      grossProfit: calculateGrowth(currentGrossProfit, prevGrossProfit),\n      operationalProfit: calculateGrowth(currentOperationalProfit, prevOperationalProfit),\n      netProfit: calculateGrowth(currentNetProfit, prevNetProfit)\n    });\n  };\n\n  const calculateKPIs = (data) => {\n    // Converter strings para números para cálculos\n    const sales = parseFloat(data.sales) || 0;\n    const cogs = parseFloat(data.costOfGoodsSold) || 0;\n    const opCosts = parseFloat(data.operationalCosts) || 0;\n    const interest = parseFloat(data.interest) || 0;\n    const taxes = parseFloat(data.taxes) || 0;\n    const debt = parseFloat(data.debt) || 0;\n    const assets = parseFloat(data.assets) || 0;\n    const rentPrice = parseFloat(data.rentPrice) || 0;\n\n    // Cálculos de KPIs\n    const grossProfit = sales - cogs;\n    const operationalProfit = grossProfit - opCosts;\n    const netProfit = operationalProfit - interest - taxes;\n\n    const calculatedKpis = {\n      // Valores absolutos\n      sales,\n      cogs,\n      grossProfit,\n      opCosts,\n      operationalProfit,\n      interest,\n      taxes,\n      netProfit,\n      debt,\n      assets,\n      rentPrice,\n      \n      // Indicadores de Rentabilidade\n      grossMargin: sales > 0 ? (grossProfit / sales * 100).toFixed(2) : 0,\n      operationalMargin: sales > 0 ? (operationalProfit / sales * 100).toFixed(2) : 0,\n      netMargin: sales > 0 ? (netProfit / sales * 100).toFixed(2) : 0,\n      \n      // Indicadores de Eficiência\n      rentEffortRatio: sales > 0 ? ((rentPrice * 12) / sales * 100).toFixed(2) : 0,\n      operationalRentEffort: opCosts > 0 ? ((rentPrice * 12) / opCosts * 100).toFixed(2) : 0,\n      interestCoverageRatio: interest > 0 ? (operationalProfit / interest).toFixed(2) : 'N/A',\n      debtRatio: assets > 0 ? (debt / assets * 100).toFixed(2) : 0,\n    };\n    \n    setKpis(calculatedKpis);\n  };\n\n  // Preparar dados para o gráfico de evolução anual\n  const prepareYearlyData = () => {\n    const years = ['2023', '2024', '2025'];\n    \n    // Calcular valores para cada ano\n    const yearlyValues = years.map(year => {\n      if (!yearData[year]) return { sales: 0, grossProfit: 0, operationalProfit: 0, netProfit: 0 };\n      \n      const data = yearData[year];\n      const sales = parseFloat(data.sales) || 0;\n      const cogs = parseFloat(data.costOfGoodsSold) || 0;\n      const opCosts = parseFloat(data.operationalCosts) || 0;\n      const interest = parseFloat(data.interest) || 0;\n      const taxes = parseFloat(data.taxes) || 0;\n      \n      const grossProfit = sales - cogs;\n      const operationalProfit = grossProfit - opCosts;\n      const netProfit = operationalProfit - interest - taxes;\n      \n      return { sales, grossProfit, operationalProfit, netProfit };\n    });\n    \n    return {\n      labels: years,\n      datasets: [\n        {\n          label: 'Vendas',\n          data: yearlyValues.map(v => v.sales),\n          backgroundColor: 'rgba(52, 152, 219, 0.7)',\n          borderColor: 'rgba(52, 152, 219, 1)',\n          borderWidth: 1\n        },\n        {\n          label: 'Lucro Bruto',\n          data: yearlyValues.map(v => v.grossProfit),\n          backgroundColor: 'rgba(46, 204, 113, 0.7)',\n          borderColor: 'rgba(46, 204, 113, 1)',\n          borderWidth: 1\n        },\n        {\n          label: 'Lucro Operacional',\n          data: yearlyValues.map(v => v.operationalProfit),\n          backgroundColor: 'rgba(155, 89, 182, 0.7)',\n          borderColor: 'rgba(155, 89, 182, 1)',\n          borderWidth: 1\n        },\n        {\n          label: 'Lucro Líquido',\n          data: yearlyValues.map(v => v.netProfit),\n          backgroundColor: 'rgba(241, 196, 15, 0.7)',\n          borderColor: 'rgba(241, 196, 15, 1)',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n  \n  // Preparar dados para o gráfico de indicadores financeiros\n  const prepareIndicatorsData = () => {\n    if (!kpis || !sectorAvg) return null;\n    \n    const indicators = [\n      'Taxa de Esforço',\n      'Renda/Custos Op.',\n      'Cobertura de Juros',\n      'Dívida/Ativo'\n    ];\n    \n    const companyValues = [\n      parseFloat(kpis.rentEffortRatio) || 0,\n      parseFloat(kpis.operationalRentEffort) || 0,\n      parseFloat(kpis.interestCoverageRatio) || 0,\n      parseFloat(kpis.debtRatio) || 0\n    ];\n    \n    const sectorValues = [\n      sectorAvg.rentEffortRatio,\n      sectorAvg.operationalRentEffort,\n      sectorAvg.interestCoverageRatio,\n      sectorAvg.debtRatio\n    ];\n    \n    return {\n      labels: indicators,\n      datasets: [\n        {\n          label: 'Sua Empresa',\n          data: companyValues,\n          backgroundColor: 'rgba(52, 152, 219, 0.7)',\n          borderColor: 'rgba(52, 152, 219, 1)',\n          borderWidth: 1\n        },\n        {\n          label: 'Média do Setor',\n          data: sectorValues,\n          backgroundColor: 'rgba(231, 76, 60, 0.7)',\n          borderColor: 'rgba(231, 76, 60, 1)',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n              }).format(context.parsed.y);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function(value) {\n            return new Intl.NumberFormat('pt-PT', {\n              style: 'currency',\n              currency: 'EUR',\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0\n            }).format(value);\n          }\n        }\n      }\n    }\n  };\n\n  const indicatorChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n\n  if (loading) {\n    return <LoadingContainer>A carregar a análise...</LoadingContainer>;\n  }\n\n  if (!yearData[2025]) {\n    return <ErrorContainer>Não foram encontrados dados de registo. Por favor, complete o registo primeiro.</ErrorContainer>;\n  }\n\n  return (\n    <PageContainer>\n      <MainContent>\n        <DiagnosisTitle>Análise da Sua Empresa</DiagnosisTitle>\n        \n        <SectionCard>\n          <SectionTitle>Evolução Financeira (2023-2025)</SectionTitle>\n          <ChartContainer>\n            <Bar data={prepareYearlyData()} options={chartOptions} />\n          </ChartContainer>\n        </SectionCard>\n        \n        <SectionCard>\n          <SectionTitle>Resumo Financeiro</SectionTitle>\n          <FinancialSummary>\n            <SummaryTable>\n              <thead>\n                <tr>\n                  <th>Métrica</th>\n                  <th>Valor</th>\n                  <th>Média do Setor</th>\n                  <th>Crescimento</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Vendas</td>\n                  <td>{formatCurrency(kpis.sales)}</td>\n                  <td>{formatCurrency(sectorAvg?.sales || 0)}</td>\n                  <td className={getGrowthClass(growthRates.sales)}>\n                    {growthRates.sales !== 'N/A' ? `${growthRates.sales}%` : 'N/A'}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Custo da Mercadoria</td>\n                  <td>{formatCurrency(kpis.cogs)}</td>\n                  <td>{formatCurrency(sectorAvg?.cogs || 0)}</td>\n                  <td>-</td>\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Bruto</td>\n                  <td>{formatCurrency(kpis.grossProfit)}</td>\n                  <td>{formatCurrency(sectorAvg?.grossProfit || 0)}</td>\n                  <td className={getGrowthClass(growthRates.grossProfit)}>\n                    {growthRates.grossProfit !== 'N/A' ? `${growthRates.grossProfit}%` : 'N/A'}\n                  </td>\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Bruta</td>\n                  <td>{kpis.grossMargin}%</td>\n                  <td>{sectorAvg?.grossMargin || 0}%</td>\n                  <td>-</td>\n                </tr>\n                <tr>\n                  <td>Custos Operacionais</td>\n                  <td>{formatCurrency(kpis.opCosts)}</td>\n                  <td>{formatCurrency(sectorAvg?.opCosts || 0)}</td>\n                  <td>-</td>\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Operacional</td>\n                  <td>{formatCurrency(kpis.operationalProfit)}</td>\n                  <td>{formatCurrency(sectorAvg?.operationalProfit || 0)}</td>\n                  <td className={getGrowthClass(growthRates.operationalProfit)}>\n                    {growthRates.operationalProfit !== 'N/A' ? `${growthRates.operationalProfit}%` : 'N/A'}\n                  </td>\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Operacional</td>\n                  <td>{kpis.operationalMargin}%</td>\n                  <td>{sectorAvg?.operationalMargin || 0}%</td>\n                  <td>-</td>\n                </tr>\n                <tr>\n                  <td>Juros</td>\n                  <td>{formatCurrency(kpis.interest)}</td>\n                  <td>{formatCurrency(sectorAvg?.interest || 0)}</td>\n                  <td>-</td>\n                </tr>\n                <tr>\n                  <td>Impostos</td>\n                  <td>{formatCurrency(kpis.taxes)}</td>\n                  <td>{formatCurrency(sectorAvg?.taxes || 0)}</td>\n                  <td>-</td>\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Líquido</td>\n                  <td>{formatCurrency(kpis.netProfit)}</td>\n                  <td>{formatCurrency(sectorAvg?.netProfit || 0)}</td>\n                  <td className={getGrowthClass(growthRates.netProfit)}>\n                    {growthRates.netProfit !== 'N/A' ? `${growthRates.netProfit}%` : 'N/A'}\n                  </td>\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Líquida</td>\n                  <td>{kpis.netMargin}%</td>\n                  <td>{sectorAvg?.netMargin || 0}%</td>\n                  <td>-</td>\n                </tr>\n              </tbody>\n            </SummaryTable>\n            \n            <SummaryTable>\n              <thead>\n                <tr>\n                  <th>Indicador</th>\n                  <th>Valor</th>\n                  <th>Média do Setor</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Taxa de Esforço (Renda/Vendas)</td>\n                  <td>{kpis.rentEffortRatio}%</td>\n                  <td>{sectorAvg?.rentEffortRatio || 0}%</td>\n                </tr>\n                <tr>\n                  <td>Renda/Custos Operacionais</td>\n                  <td>{kpis.operationalRentEffort}%</td>\n                  <td>{sectorAvg?.operationalRentEffort || 0}%</td>\n                </tr>\n                <tr>\n                  <td>Índice de Cobertura de Juros</td>\n                  <td>{kpis.interestCoverageRatio}</td>\n                  <td>{sectorAvg?.interestCoverageRatio || 0}</td>\n                </tr>\n                <tr>\n                  <td>Dívida/Ativo</td>\n                  <td>{kpis.debtRatio}%</td>\n                  <td>{sectorAvg?.debtRatio || 0}%</td>\n                </tr>\n              </tbody>\n            </SummaryTable>\n          </FinancialSummary>\n        </SectionCard>\n        \n        <SectionCard>\n          <SectionTitle>Indicadores Financeiros vs. Média do Setor</SectionTitle>\n          <ChartContainer>\n            <Bar data={prepareIndicatorsData()} options={indicatorChartOptions} />\n          </ChartContainer>\n        </SectionCard>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\n// Função auxiliar para formatar valores monetários\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('pt-PT', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Função para determinar a classe CSS com base na taxa de crescimento\nconst getGrowthClass = (growthRate) => {\n  if (growthRate === 'N/A') return '';\n  const rate = parseFloat(growthRate);\n  if (rate > 0) return 'positive-growth';\n  if (rate < 0) return 'negative-growth';\n  return '';\n};\n\n// Styled Components\nconst PageContainer = styled.div`\n  padding: 40px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst DiagnosisTitle = styled.h1`\n  color: #2c3e50;\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  font-family: 'Playfair Display', serif;\n`;\n\nconst SectionCard = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  padding: 30px;\n  margin-bottom: 30px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #2c3e50;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst ChartContainer = styled.div`\n  height: 400px;\n  margin-bottom: 20px;\n`;\n\nconst FinancialSummary = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SummaryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  \n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #ecf0f1;\n  }\n  \n  th {\n    background-color: #f8f9fa;\n    font-weight: 600;\n    color: #2c3e50;\n  }\n  \n  tr.highlight {\n    font-weight: 600;\n    background-color: #f1f8ff;\n  }\n  \n  tr.ratio {\n    font-style: italic;\n    color: #7f8c8d;\n  }\n  \n  td.positive-growth {\n    color: #27ae60;\n    font-weight: 600;\n  }\n  \n  td.negative-growth {\n    color: #e74c3c;\n    font-weight: 600;\n  }\n  \n  @media (min-width: 769px) {\n    flex: 1;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 24px;\n  color: #3498db;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 20px;\n  color: #e74c3c;\n  text-align: center;\n  padding: 0 20px;\n`;\n\nexport default Diagnosis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}