{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanhabibo/Desktop/JBC/src/pages/BusinessMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport { businessSectors, businessAreas } from '../data/businessData';\n\n// Lista de freguesias de Lisboa\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lisboaParishes = ['Ajuda', 'Alcântara', 'Alvalade', 'Areeiro', 'Arroios', 'Avenidas Novas', 'Beato', 'Belém', 'Benfica', 'Campo de Ourique', 'Campolide', 'Carnide', 'Estrela', 'Lumiar', 'Marvila', 'Misericórdia', 'Olivais', 'Parque das Nações', 'Penha de França', 'Santa Clara', 'Santa Maria Maior', 'Santo António', 'São Domingos de Benfica', 'São Vicente'];\n\n// Configurações do mapa\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst center = {\n  lat: 38.7223,\n  // Latitude central de Lisboa\n  lng: -9.1393 // Longitude central de Lisboa\n};\n\n// Dados mockados de estabelecimentos em Lisboa\nconst mockBusinesses = [{\n  id: 1,\n  name: \"Café Lisboa\",\n  position: {\n    lat: 38.7173,\n    lng: -9.1378\n  },\n  sector: \"food\",\n  area: \"cafe\",\n  parish: \"Santa Maria Maior\",\n  rating: 4.2,\n  forSale: false\n}, {\n  id: 2,\n  name: \"Restaurante Tejo\",\n  position: {\n    lat: 38.7103,\n    lng: -9.1448\n  },\n  sector: \"food\",\n  area: \"restaurant\",\n  parish: \"Misericórdia\",\n  rating: 4.5,\n  forSale: true,\n  saleType: \"business\",\n  price: 120000\n}\n// Adicione mais estabelecimentos conforme necessário\n];\nconst BusinessMap = () => {\n  _s();\n  var _averages$sectors$sel, _averages$areas$selec;\n  const [businesses, setBusinesses] = useState(mockBusinesses);\n  const [filteredBusinesses, setFilteredBusinesses] = useState(mockBusinesses);\n  const [selectedBusiness, setSelectedBusiness] = useState(null);\n  const [selectedSector, setSelectedSector] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n  const [selectedParish, setSelectedParish] = useState(\"\");\n  const [radius, setRadius] = useState(2);\n  const [showOnlyForSale, setShowOnlyForSale] = useState(false);\n  const [averages, setAverages] = useState({});\n  const mapRef = useRef(null);\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\",\n    // Substitua pela sua chave de API\n    libraries: [\"places\"]\n  });\n\n  // Calcular médias de desempenho por setor/área\n  useEffect(() => {\n    const calculateAverages = () => {\n      const sectorAverages = {};\n      const areaAverages = {};\n      businesses.forEach(business => {\n        // Calcular médias por setor\n        if (!sectorAverages[business.sector]) {\n          sectorAverages[business.sector] = {\n            count: 0,\n            ratingSum: 0\n          };\n        }\n        sectorAverages[business.sector].count++;\n        sectorAverages[business.sector].ratingSum += business.rating;\n\n        // Calcular médias por área\n        if (!areaAverages[business.area]) {\n          areaAverages[business.area] = {\n            count: 0,\n            ratingSum: 0\n          };\n        }\n        areaAverages[business.area].count++;\n        areaAverages[business.area].ratingSum += business.rating;\n      });\n\n      // Calcular médias finais\n      const finalSectorAverages = {};\n      Object.keys(sectorAverages).forEach(sector => {\n        finalSectorAverages[sector] = sectorAverages[sector].ratingSum / sectorAverages[sector].count;\n      });\n      const finalAreaAverages = {};\n      Object.keys(areaAverages).forEach(area => {\n        finalAreaAverages[area] = areaAverages[area].ratingSum / areaAverages[area].count;\n      });\n      setAverages({\n        sectors: finalSectorAverages,\n        areas: finalAreaAverages\n      });\n    };\n    calculateAverages();\n  }, [businesses]);\n\n  // Filtrar estabelecimentos com base nos critérios selecionados\n  useEffect(() => {\n    let filtered = businesses;\n    if (selectedSector) {\n      filtered = filtered.filter(business => business.sector === selectedSector);\n    }\n    if (selectedArea) {\n      filtered = filtered.filter(business => business.area === selectedArea);\n    }\n    if (selectedParish) {\n      filtered = filtered.filter(business => business.parish === selectedParish);\n    }\n    if (showOnlyForSale) {\n      filtered = filtered.filter(business => business.forSale);\n    }\n\n    // Filtrar por raio se um centro for selecionado\n    if (mapRef.current && radius > 0) {\n      const center = mapRef.current.getCenter();\n      if (center) {\n        const centerLat = center.lat();\n        const centerLng = center.lng();\n        filtered = filtered.filter(business => {\n          const distance = getDistanceFromLatLonInKm(centerLat, centerLng, business.position.lat, business.position.lng);\n          return distance <= radius;\n        });\n      }\n    }\n    setFilteredBusinesses(filtered);\n  }, [businesses, selectedSector, selectedArea, selectedParish, radius, showOnlyForSale]);\n\n  // Função para calcular distância entre dois pontos geográficos\n  const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Raio da Terra em km\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distância em km\n    return distance;\n  };\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180);\n  };\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const getSectorName = sectorId => {\n    const sector = businessSectors.find(s => s.id === sectorId);\n    return sector ? sector.namePortuguese : sectorId;\n  };\n  const getAreaName = areaId => {\n    const area = businessAreas.find(a => a.id === areaId);\n    return area ? area.namePortuguese : areaId;\n  };\n  const getSaleTypeText = type => {\n    switch (type) {\n      case \"business\":\n        return \"Negócio à Venda\";\n      case \"property\":\n        return \"Imóvel à Venda\";\n      case \"both\":\n        return \"Negócio e Imóvel à Venda\";\n      default:\n        return \"À Venda\";\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(MapError, {\n    children: \"Erro ao carregar o mapa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Loading, {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n      children: [/*#__PURE__*/_jsxDEV(PanelTitle, {\n        children: \"Mapa de Com\\xE9rcio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterSection, {\n        children: [/*#__PURE__*/_jsxDEV(FilterTitle, {\n          children: \"Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n            children: \"Setor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedSector,\n            onChange: e => setSelectedSector(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os Setores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), businessSectors.map(sector => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: sector.id,\n              children: sector.namePortuguese\n            }, sector.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n            children: \"\\xC1rea de Neg\\xF3cio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedArea,\n            onChange: e => setSelectedArea(e.target.value),\n            disabled: !selectedSector,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todas as \\xC1reas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), businessAreas.filter(area => !selectedSector || area.sectorId === selectedSector).map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: area.id,\n              children: area.namePortuguese\n            }, area.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n            children: \"Freguesia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedParish,\n            onChange: e => setSelectedParish(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todas as Freguesias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), lisboaParishes.map(parish => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: parish,\n              children: parish\n            }, parish, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n            children: [\"Raio de Pesquisa (km): \", radius]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RangeInput, {\n            type: \"range\",\n            min: \"0.5\",\n            max: \"10\",\n            step: \"0.5\",\n            value: radius,\n            onChange: e => setRadius(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {\n          children: /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              id: \"forSale\",\n              checked: showOnlyForSale,\n              onChange: () => setShowOnlyForSale(!showOnlyForSale)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n              htmlFor: \"forSale\",\n              children: \"Mostrar apenas estabelecimentos \\xE0 venda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsSection, {\n        children: [/*#__PURE__*/_jsxDEV(StatsTitle, {\n          children: \"M\\xE9dias de Desempenho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), selectedSector && averages.sectors && /*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: [\"M\\xE9dia do Setor \", getSectorName(selectedSector), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n            children: ((_averages$sectors$sel = averages.sectors[selectedSector]) === null || _averages$sectors$sel === void 0 ? void 0 : _averages$sectors$sel.toFixed(1)) || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), selectedArea && averages.areas && /*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: [\"M\\xE9dia da \\xC1rea \", getAreaName(selectedArea), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n            children: ((_averages$areas$selec = averages.areas[selectedArea]) === null || _averages$areas$selec === void 0 ? void 0 : _averages$areas$selec.toFixed(1)) || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), !selectedSector && !selectedArea && /*#__PURE__*/_jsxDEV(EmptyStats, {\n          children: \"Selecione um setor ou \\xE1rea para ver m\\xE9dias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendSection, {\n        children: [/*#__PURE__*/_jsxDEV(LegendTitle, {\n          children: \"Legenda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendMarker, {\n            color: \"#4285F4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendText, {\n            children: \"Estabelecimento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendMarker, {\n            color: \"#EA4335\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendText, {\n            children: \"Estabelecimento \\xE0 Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          children: [/*#__PURE__*/_jsxDEV(LegendMarker, {\n            color: \"#FBBC05\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendText, {\n            children: \"Estabelecimento Selecionado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: center,\n        zoom: 13,\n        onLoad: onMapLoad,\n        children: [filteredBusinesses.map(business => /*#__PURE__*/_jsxDEV(Marker, {\n          position: business.position,\n          icon: {\n            path: \"M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z\",\n            fillColor: business.forSale ? \"#EA4335\" : \"#4285F4\",\n            fillOpacity: 1,\n            strokeWeight: 1,\n            strokeColor: \"#FFFFFF\",\n            scale: 2,\n            anchor: {\n              x: 12,\n              y: 23\n            }\n          },\n          onClick: () => setSelectedBusiness(business)\n        }, business.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)), selectedBusiness && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: selectedBusiness.position,\n          onCloseClick: () => setSelectedBusiness(null),\n          children: /*#__PURE__*/_jsxDEV(InfoWindowContent, {\n            children: [/*#__PURE__*/_jsxDEV(BusinessName, {\n              children: selectedBusiness.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), selectedBusiness.forSale && /*#__PURE__*/_jsxDEV(ForSaleTag, {\n              children: getSaleTypeText(selectedBusiness.saleType)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(BusinessInfo, {\n              children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n                children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n                  children: \"Setor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n                  children: getSectorName(selectedBusiness.sector)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n                children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n                  children: \"\\xC1rea:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n                  children: getAreaName(selectedBusiness.area)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n                children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n                  children: \"Freguesia:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n                  children: selectedBusiness.parish\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n                children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n                  children: \"Avalia\\xE7\\xE3o:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n                  children: selectedBusiness.rating.toFixed(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), selectedBusiness.forSale && selectedBusiness.price && /*#__PURE__*/_jsxDEV(InfoItem, {\n                children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n                  children: \"Pre\\xE7o:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n                  children: [selectedBusiness.price.toLocaleString('pt-PT'), \"\\u20AC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n              children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n                children: \"Ver Detalhes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), selectedBusiness.forSale && /*#__PURE__*/_jsxDEV(ActionButton, {\n                primary: true,\n                children: \"Contactar Vendedor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n\n// Estilos\n_s(BusinessMap, \"3NUJseL1BWGRShePzOxUbYpKp/Y=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = BusinessMap;\nconst PageContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 80px);\n`;\n_c2 = PageContainer;\nconst SidePanel = styled.div`\n  width: 350px;\n  background-color: white;\n  border-right: 1px solid #e0e0e0;\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c3 = SidePanel;\nconst PanelTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: #2c3e50;\n  margin-bottom: 20px;\n`;\n_c4 = PanelTitle;\nconst FilterSection = styled.div`\n  margin-bottom: 30px;\n`;\n_c5 = FilterSection;\nconst FilterTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n_c6 = FilterTitle;\nconst FilterGroup = styled.div`\n  margin-bottom: 15px;\n`;\n_c7 = FilterGroup;\nconst FilterLabel = styled.label`\n  display: block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #34495e;\n  margin-bottom: 5px;\n`;\n_c8 = FilterLabel;\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #dcdfe6;\n  border-radius: 8px;\n  font-size: 14px;\n  color: #2c3e50;\n  background-color: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f5f7fa;\n    cursor: not-allowed;\n  }\n`;\n_c9 = Select;\nconst RangeInput = styled.input`\n  width: 100%;\n  margin-top: 5px;\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #3498db;\n    cursor: pointer;\n  }\n  \n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #3498db;\n    cursor: pointer;\n  }\n`;\n_c10 = RangeInput;\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n_c11 = CheckboxContainer;\nconst Checkbox = styled.input`\n  margin-right: 10px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n_c12 = Checkbox;\nconst CheckboxLabel = styled.label`\n  font-size: 14px;\n  color: #34495e;\n  cursor: pointer;\n`;\n_c13 = CheckboxLabel;\nconst StatsSection = styled.div`\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n`;\n_c14 = StatsSection;\nconst StatsTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n_c15 = StatsTitle;\nconst StatItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n_c16 = StatItem;\nconst StatLabel = styled.span`\n  font-size: 14px;\n  color: #34495e;\n`;\n_c17 = StatLabel;\nconst StatValue = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  color: #2c3e50;\n`;\n_c18 = StatValue;\nconst EmptyStats = styled.div`\n  font-size: 14px;\n  color: #7f8c8d;\n  text-align: center;\n  padding: 10px;\n`;\n_c19 = EmptyStats;\nconst LegendSection = styled.div`\n  margin-bottom: 20px;\n`;\n_c20 = LegendSection;\nconst LegendTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n_c21 = LegendTitle;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n_c22 = LegendItem;\nconst LegendMarker = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 10px;\n`;\n_c23 = LegendMarker;\nconst LegendText = styled.span`\n  font-size: 14px;\n  color: #34495e;\n`;\n_c24 = LegendText;\nconst MapContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\n_c25 = MapContainer;\nconst InfoWindowContent = styled.div`\n  padding: 5px;\n  max-width: 250px;\n`;\n_c26 = InfoWindowContent;\nconst BusinessName = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 5px;\n`;\n_c27 = BusinessName;\nconst ForSaleTag = styled.div`\n  display: inline-block;\n  background-color: #EA4335;\n  color: white;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 3px 8px;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n_c28 = ForSaleTag;\nconst BusinessInfo = styled.div`\n  margin-bottom: 10px;\n`;\n_c29 = BusinessInfo;\nconst InfoItem = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n`;\n_c30 = InfoItem;\nconst InfoLabel = styled.span`\n  font-size: 13px;\n  font-weight: 500;\n  color: #7f8c8d;\n  width: 80px;\n`;\n_c31 = InfoLabel;\nconst InfoValue = styled.span`\n  font-size: 13px;\n  color: #2c3e50;\n`;\n_c32 = InfoValue;\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c33 = ActionButtons;\nconst ActionButton = styled.button`\n  flex: 1;\n  background-color: ${props => props.primary ? '#3498db' : '#f5f7fa'};\n  color: ${props => props.primary ? 'white' : '#34495e'};\n  border: none;\n  border-radius: 4px;\n  padding: 6px 10px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background-color: ${props => props.primary ? '#2980b9' : '#e0e6ed'};\n  }\n`;\n_c34 = ActionButton;\nconst MapError = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 20px;\n  color: #e74c3c;\n`;\n_c35 = MapError;\nconst Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 20px;\n  color: #3498db;\n`;\n_c36 = Loading;\nexport default BusinessMap;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36;\n$RefreshReg$(_c, \"BusinessMap\");\n$RefreshReg$(_c2, \"PageContainer\");\n$RefreshReg$(_c3, \"SidePanel\");\n$RefreshReg$(_c4, \"PanelTitle\");\n$RefreshReg$(_c5, \"FilterSection\");\n$RefreshReg$(_c6, \"FilterTitle\");\n$RefreshReg$(_c7, \"FilterGroup\");\n$RefreshReg$(_c8, \"FilterLabel\");\n$RefreshReg$(_c9, \"Select\");\n$RefreshReg$(_c10, \"RangeInput\");\n$RefreshReg$(_c11, \"CheckboxContainer\");\n$RefreshReg$(_c12, \"Checkbox\");\n$RefreshReg$(_c13, \"CheckboxLabel\");\n$RefreshReg$(_c14, \"StatsSection\");\n$RefreshReg$(_c15, \"StatsTitle\");\n$RefreshReg$(_c16, \"StatItem\");\n$RefreshReg$(_c17, \"StatLabel\");\n$RefreshReg$(_c18, \"StatValue\");\n$RefreshReg$(_c19, \"EmptyStats\");\n$RefreshReg$(_c20, \"LegendSection\");\n$RefreshReg$(_c21, \"LegendTitle\");\n$RefreshReg$(_c22, \"LegendItem\");\n$RefreshReg$(_c23, \"LegendMarker\");\n$RefreshReg$(_c24, \"LegendText\");\n$RefreshReg$(_c25, \"MapContainer\");\n$RefreshReg$(_c26, \"InfoWindowContent\");\n$RefreshReg$(_c27, \"BusinessName\");\n$RefreshReg$(_c28, \"ForSaleTag\");\n$RefreshReg$(_c29, \"BusinessInfo\");\n$RefreshReg$(_c30, \"InfoItem\");\n$RefreshReg$(_c31, \"InfoLabel\");\n$RefreshReg$(_c32, \"InfoValue\");\n$RefreshReg$(_c33, \"ActionButtons\");\n$RefreshReg$(_c34, \"ActionButton\");\n$RefreshReg$(_c35, \"MapError\");\n$RefreshReg$(_c36, \"Loading\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","styled","GoogleMap","useJsApiLoader","Marker","InfoWindow","businessSectors","businessAreas","jsxDEV","_jsxDEV","lisboaParishes","mapContainerStyle","width","height","center","lat","lng","mockBusinesses","id","name","position","sector","area","parish","rating","forSale","saleType","price","BusinessMap","_s","_averages$sectors$sel","_averages$areas$selec","businesses","setBusinesses","filteredBusinesses","setFilteredBusinesses","selectedBusiness","setSelectedBusiness","selectedSector","setSelectedSector","selectedArea","setSelectedArea","selectedParish","setSelectedParish","radius","setRadius","showOnlyForSale","setShowOnlyForSale","averages","setAverages","mapRef","isLoaded","loadError","googleMapsApiKey","libraries","calculateAverages","sectorAverages","areaAverages","forEach","business","count","ratingSum","finalSectorAverages","Object","keys","finalAreaAverages","sectors","areas","filtered","filter","current","getCenter","centerLat","centerLng","distance","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","deg","PI","onMapLoad","map","getSectorName","sectorId","find","s","namePortuguese","getAreaName","areaId","getSaleTypeText","type","MapError","children","fileName","_jsxFileName","lineNumber","columnNumber","Loading","PageContainer","SidePanel","PanelTitle","FilterSection","FilterTitle","FilterGroup","FilterLabel","Select","value","onChange","e","target","disabled","RangeInput","min","max","step","parseFloat","CheckboxContainer","Checkbox","checked","CheckboxLabel","htmlFor","StatsSection","StatsTitle","StatItem","StatLabel","StatValue","toFixed","EmptyStats","LegendSection","LegendTitle","LegendItem","LegendMarker","color","LegendText","MapContainer","zoom","onLoad","icon","path","fillColor","fillOpacity","strokeWeight","strokeColor","scale","anchor","x","y","onClick","onCloseClick","InfoWindowContent","BusinessName","ForSaleTag","BusinessInfo","InfoItem","InfoLabel","InfoValue","toLocaleString","ActionButtons","ActionButton","primary","_c","div","_c2","_c3","h1","_c4","_c5","h2","_c6","_c7","label","_c8","select","_c9","input","_c10","_c11","_c12","_c13","_c14","_c15","_c16","span","_c17","_c18","_c19","_c20","_c21","_c22","props","_c23","_c24","_c25","_c26","h3","_c27","_c28","_c29","_c30","_c31","_c32","_c33","button","_c34","_c35","_c36","$RefreshReg$"],"sources":["/Users/iliyanhabibo/Desktop/JBC/src/pages/BusinessMap.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport { businessSectors, businessAreas } from '../data/businessData';\n\n// Lista de freguesias de Lisboa\nconst lisboaParishes = [\n  'Ajuda', 'Alcântara', 'Alvalade', 'Areeiro', 'Arroios', 'Avenidas Novas', \n  'Beato', 'Belém', 'Benfica', 'Campo de Ourique', 'Campolide', 'Carnide', \n  'Estrela', 'Lumiar', 'Marvila', 'Misericórdia', 'Olivais', 'Parque das Nações', \n  'Penha de França', 'Santa Clara', 'Santa Maria Maior', 'Santo António', \n  'São Domingos de Benfica', 'São Vicente'\n];\n\n// Configurações do mapa\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst center = {\n  lat: 38.7223, // Latitude central de Lisboa\n  lng: -9.1393  // Longitude central de Lisboa\n};\n\n// Dados mockados de estabelecimentos em Lisboa\nconst mockBusinesses = [\n  {\n    id: 1,\n    name: \"Café Lisboa\",\n    position: { lat: 38.7173, lng: -9.1378 },\n    sector: \"food\",\n    area: \"cafe\",\n    parish: \"Santa Maria Maior\",\n    rating: 4.2,\n    forSale: false\n  },\n  {\n    id: 2,\n    name: \"Restaurante Tejo\",\n    position: { lat: 38.7103, lng: -9.1448 },\n    sector: \"food\",\n    area: \"restaurant\",\n    parish: \"Misericórdia\",\n    rating: 4.5,\n    forSale: true,\n    saleType: \"business\",\n    price: 120000\n  },\n  // Adicione mais estabelecimentos conforme necessário\n];\n\nconst BusinessMap = () => {\n  const [businesses, setBusinesses] = useState(mockBusinesses);\n  const [filteredBusinesses, setFilteredBusinesses] = useState(mockBusinesses);\n  const [selectedBusiness, setSelectedBusiness] = useState(null);\n  const [selectedSector, setSelectedSector] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n  const [selectedParish, setSelectedParish] = useState(\"\");\n  const [radius, setRadius] = useState(2);\n  const [showOnlyForSale, setShowOnlyForSale] = useState(false);\n  const [averages, setAverages] = useState({});\n  const mapRef = useRef(null);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\", // Substitua pela sua chave de API\n    libraries: [\"places\"]\n  });\n\n  // Calcular médias de desempenho por setor/área\n  useEffect(() => {\n    const calculateAverages = () => {\n      const sectorAverages = {};\n      const areaAverages = {};\n\n      businesses.forEach(business => {\n        // Calcular médias por setor\n        if (!sectorAverages[business.sector]) {\n          sectorAverages[business.sector] = {\n            count: 0,\n            ratingSum: 0\n          };\n        }\n        sectorAverages[business.sector].count++;\n        sectorAverages[business.sector].ratingSum += business.rating;\n\n        // Calcular médias por área\n        if (!areaAverages[business.area]) {\n          areaAverages[business.area] = {\n            count: 0,\n            ratingSum: 0\n          };\n        }\n        areaAverages[business.area].count++;\n        areaAverages[business.area].ratingSum += business.rating;\n      });\n\n      // Calcular médias finais\n      const finalSectorAverages = {};\n      Object.keys(sectorAverages).forEach(sector => {\n        finalSectorAverages[sector] = sectorAverages[sector].ratingSum / sectorAverages[sector].count;\n      });\n\n      const finalAreaAverages = {};\n      Object.keys(areaAverages).forEach(area => {\n        finalAreaAverages[area] = areaAverages[area].ratingSum / areaAverages[area].count;\n      });\n\n      setAverages({\n        sectors: finalSectorAverages,\n        areas: finalAreaAverages\n      });\n    };\n\n    calculateAverages();\n  }, [businesses]);\n\n  // Filtrar estabelecimentos com base nos critérios selecionados\n  useEffect(() => {\n    let filtered = businesses;\n\n    if (selectedSector) {\n      filtered = filtered.filter(business => business.sector === selectedSector);\n    }\n\n    if (selectedArea) {\n      filtered = filtered.filter(business => business.area === selectedArea);\n    }\n\n    if (selectedParish) {\n      filtered = filtered.filter(business => business.parish === selectedParish);\n    }\n\n    if (showOnlyForSale) {\n      filtered = filtered.filter(business => business.forSale);\n    }\n\n    // Filtrar por raio se um centro for selecionado\n    if (mapRef.current && radius > 0) {\n      const center = mapRef.current.getCenter();\n      if (center) {\n        const centerLat = center.lat();\n        const centerLng = center.lng();\n        \n        filtered = filtered.filter(business => {\n          const distance = getDistanceFromLatLonInKm(\n            centerLat, \n            centerLng, \n            business.position.lat, \n            business.position.lng\n          );\n          return distance <= radius;\n        });\n      }\n    }\n\n    setFilteredBusinesses(filtered);\n  }, [businesses, selectedSector, selectedArea, selectedParish, radius, showOnlyForSale]);\n\n  // Função para calcular distância entre dois pontos geográficos\n  const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Raio da Terra em km\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distância em km\n    return distance;\n  };\n\n  const deg2rad = (deg) => {\n    return deg * (Math.PI / 180);\n  };\n\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const getSectorName = (sectorId) => {\n    const sector = businessSectors.find(s => s.id === sectorId);\n    return sector ? sector.namePortuguese : sectorId;\n  };\n\n  const getAreaName = (areaId) => {\n    const area = businessAreas.find(a => a.id === areaId);\n    return area ? area.namePortuguese : areaId;\n  };\n\n  const getSaleTypeText = (type) => {\n    switch (type) {\n      case \"business\":\n        return \"Negócio à Venda\";\n      case \"property\":\n        return \"Imóvel à Venda\";\n      case \"both\":\n        return \"Negócio e Imóvel à Venda\";\n      default:\n        return \"À Venda\";\n    }\n  };\n\n  if (loadError) return <MapError>Erro ao carregar o mapa</MapError>;\n  if (!isLoaded) return <Loading>Carregando...</Loading>;\n\n  return (\n    <PageContainer>\n      <SidePanel>\n        <PanelTitle>Mapa de Comércio</PanelTitle>\n        \n        <FilterSection>\n          <FilterTitle>Filtros</FilterTitle>\n          \n          <FilterGroup>\n            <FilterLabel>Setor</FilterLabel>\n            <Select \n              value={selectedSector} \n              onChange={(e) => setSelectedSector(e.target.value)}\n            >\n              <option value=\"\">Todos os Setores</option>\n              {businessSectors.map(sector => (\n                <option key={sector.id} value={sector.id}>\n                  {sector.namePortuguese}\n                </option>\n              ))}\n            </Select>\n          </FilterGroup>\n          \n          <FilterGroup>\n            <FilterLabel>Área de Negócio</FilterLabel>\n            <Select \n              value={selectedArea} \n              onChange={(e) => setSelectedArea(e.target.value)}\n              disabled={!selectedSector}\n            >\n              <option value=\"\">Todas as Áreas</option>\n              {businessAreas\n                .filter(area => !selectedSector || area.sectorId === selectedSector)\n                .map(area => (\n                  <option key={area.id} value={area.id}>\n                    {area.namePortuguese}\n                  </option>\n                ))\n              }\n            </Select>\n          </FilterGroup>\n          \n          <FilterGroup>\n            <FilterLabel>Freguesia</FilterLabel>\n            <Select \n              value={selectedParish} \n              onChange={(e) => setSelectedParish(e.target.value)}\n            >\n              <option value=\"\">Todas as Freguesias</option>\n              {lisboaParishes.map(parish => (\n                <option key={parish} value={parish}>\n                  {parish}\n                </option>\n              ))}\n            </Select>\n          </FilterGroup>\n          \n          <FilterGroup>\n            <FilterLabel>Raio de Pesquisa (km): {radius}</FilterLabel>\n            <RangeInput \n              type=\"range\" \n              min=\"0.5\" \n              max=\"10\" \n              step=\"0.5\" \n              value={radius} \n              onChange={(e) => setRadius(parseFloat(e.target.value))}\n            />\n          </FilterGroup>\n          \n          <FilterGroup>\n            <CheckboxContainer>\n              <Checkbox \n                type=\"checkbox\" \n                id=\"forSale\" \n                checked={showOnlyForSale} \n                onChange={() => setShowOnlyForSale(!showOnlyForSale)}\n              />\n              <CheckboxLabel htmlFor=\"forSale\">Mostrar apenas estabelecimentos à venda</CheckboxLabel>\n            </CheckboxContainer>\n          </FilterGroup>\n        </FilterSection>\n        \n        <StatsSection>\n          <StatsTitle>Médias de Desempenho</StatsTitle>\n          \n          {selectedSector && averages.sectors && (\n            <StatItem>\n              <StatLabel>Média do Setor {getSectorName(selectedSector)}:</StatLabel>\n              <StatValue>{averages.sectors[selectedSector]?.toFixed(1) || \"N/A\"}</StatValue>\n            </StatItem>\n          )}\n          \n          {selectedArea && averages.areas && (\n            <StatItem>\n              <StatLabel>Média da Área {getAreaName(selectedArea)}:</StatLabel>\n              <StatValue>{averages.areas[selectedArea]?.toFixed(1) || \"N/A\"}</StatValue>\n            </StatItem>\n          )}\n          \n          {(!selectedSector && !selectedArea) && (\n            <EmptyStats>Selecione um setor ou área para ver médias</EmptyStats>\n          )}\n        </StatsSection>\n        \n        <LegendSection>\n          <LegendTitle>Legenda</LegendTitle>\n          \n          <LegendItem>\n            <LegendMarker color=\"#4285F4\" />\n            <LegendText>Estabelecimento</LegendText>\n          </LegendItem>\n          \n          <LegendItem>\n            <LegendMarker color=\"#EA4335\" />\n            <LegendText>Estabelecimento à Venda</LegendText>\n          </LegendItem>\n          \n          <LegendItem>\n            <LegendMarker color=\"#FBBC05\" />\n            <LegendText>Estabelecimento Selecionado</LegendText>\n          </LegendItem>\n        </LegendSection>\n      </SidePanel>\n      \n      <MapContainer>\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          center={center}\n          zoom={13}\n          onLoad={onMapLoad}\n        >\n          {filteredBusinesses.map(business => (\n            <Marker\n              key={business.id}\n              position={business.position}\n              icon={{\n                path: \"M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z\",\n                fillColor: business.forSale ? \"#EA4335\" : \"#4285F4\",\n                fillOpacity: 1,\n                strokeWeight: 1,\n                strokeColor: \"#FFFFFF\",\n                scale: 2,\n                anchor: { x: 12, y: 23 },\n              }}\n              onClick={() => setSelectedBusiness(business)}\n            />\n          ))}\n          \n          {selectedBusiness && (\n            <InfoWindow\n              position={selectedBusiness.position}\n              onCloseClick={() => setSelectedBusiness(null)}\n            >\n              <InfoWindowContent>\n                <BusinessName>{selectedBusiness.name}</BusinessName>\n                \n                {selectedBusiness.forSale && (\n                  <ForSaleTag>{getSaleTypeText(selectedBusiness.saleType)}</ForSaleTag>\n                )}\n                \n                <BusinessInfo>\n                  <InfoItem>\n                    <InfoLabel>Setor:</InfoLabel>\n                    <InfoValue>{getSectorName(selectedBusiness.sector)}</InfoValue>\n                  </InfoItem>\n                  \n                  <InfoItem>\n                    <InfoLabel>Área:</InfoLabel>\n                    <InfoValue>{getAreaName(selectedBusiness.area)}</InfoValue>\n                  </InfoItem>\n                  \n                  <InfoItem>\n                    <InfoLabel>Freguesia:</InfoLabel>\n                    <InfoValue>{selectedBusiness.parish}</InfoValue>\n                  </InfoItem>\n                  \n                  <InfoItem>\n                    <InfoLabel>Avaliação:</InfoLabel>\n                    <InfoValue>{selectedBusiness.rating.toFixed(1)}</InfoValue>\n                  </InfoItem>\n                  \n                  {selectedBusiness.forSale && selectedBusiness.price && (\n                    <InfoItem>\n                      <InfoLabel>Preço:</InfoLabel>\n                      <InfoValue>{selectedBusiness.price.toLocaleString('pt-PT')}€</InfoValue>\n                    </InfoItem>\n                  )}\n                </BusinessInfo>\n                \n                <ActionButtons>\n                  <ActionButton>Ver Detalhes</ActionButton>\n                  {selectedBusiness.forSale && (\n                    <ActionButton primary>Contactar Vendedor</ActionButton>\n                  )}\n                </ActionButtons>\n              </InfoWindowContent>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </MapContainer>\n    </PageContainer>\n  );\n};\n\n// Estilos\nconst PageContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 80px);\n`;\n\nconst SidePanel = styled.div`\n  width: 350px;\n  background-color: white;\n  border-right: 1px solid #e0e0e0;\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst PanelTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: #2c3e50;\n  margin-bottom: 20px;\n`;\n\nconst FilterSection = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst FilterTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n\nconst FilterGroup = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst FilterLabel = styled.label`\n  display: block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #34495e;\n  margin-bottom: 5px;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #dcdfe6;\n  border-radius: 8px;\n  font-size: 14px;\n  color: #2c3e50;\n  background-color: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f5f7fa;\n    cursor: not-allowed;\n  }\n`;\n\nconst RangeInput = styled.input`\n  width: 100%;\n  margin-top: 5px;\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #3498db;\n    cursor: pointer;\n  }\n  \n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #3498db;\n    cursor: pointer;\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nconst Checkbox = styled.input`\n  margin-right: 10px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nconst CheckboxLabel = styled.label`\n  font-size: 14px;\n  color: #34495e;\n  cursor: pointer;\n`;\n\nconst StatsSection = styled.div`\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n`;\n\nconst StatsTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst StatLabel = styled.span`\n  font-size: 14px;\n  color: #34495e;\n`;\n\nconst StatValue = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  color: #2c3e50;\n`;\n\nconst EmptyStats = styled.div`\n  font-size: 14px;\n  color: #7f8c8d;\n  text-align: center;\n  padding: 10px;\n`;\n\nconst LegendSection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst LegendTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 15px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst LegendMarker = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 10px;\n`;\n\nconst LegendText = styled.span`\n  font-size: 14px;\n  color: #34495e;\n`;\n\nconst MapContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\n\nconst InfoWindowContent = styled.div`\n  padding: 5px;\n  max-width: 250px;\n`;\n\nconst BusinessName = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 5px;\n`;\n\nconst ForSaleTag = styled.div`\n  display: inline-block;\n  background-color: #EA4335;\n  color: white;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 3px 8px;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n\nconst BusinessInfo = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst InfoItem = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nconst InfoLabel = styled.span`\n  font-size: 13px;\n  font-weight: 500;\n  color: #7f8c8d;\n  width: 80px;\n`;\n\nconst InfoValue = styled.span`\n  font-size: 13px;\n  color: #2c3e50;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  flex: 1;\n  background-color: ${props => props.primary ? '#3498db' : '#f5f7fa'};\n  color: ${props => props.primary ? 'white' : '#34495e'};\n  border: none;\n  border-radius: 4px;\n  padding: 6px 10px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background-color: ${props => props.primary ? '#2980b9' : '#e0e6ed'};\n  }\n`;\n\nconst MapError = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 20px;\n  color: #e74c3c;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 20px;\n  color: #3498db;\n`;\n\nexport default BusinessMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}