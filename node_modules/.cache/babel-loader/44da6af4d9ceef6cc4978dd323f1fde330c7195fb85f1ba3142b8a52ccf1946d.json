{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanhabibo/Desktop/JBC/src/pages/Diagnosis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrar os componentes do Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Médias do setor (hardcoded para demonstração)\nconst sectorAverages = {\n  retail: {\n    sales: 500000,\n    cogs: 325000,\n    grossProfit: 175000,\n    opCosts: 100000,\n    operationalProfit: 75000,\n    interest: 10000,\n    taxes: 15000,\n    netProfit: 50000,\n    grossMargin: 35,\n    operationalMargin: 18,\n    netMargin: 8,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 5,\n    debtRatio: 40\n  },\n  manufacturing: {\n    sales: 1200000,\n    cogs: 720000,\n    grossProfit: 480000,\n    opCosts: 240000,\n    operationalProfit: 240000,\n    interest: 30000,\n    taxes: 50000,\n    netProfit: 160000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 3,\n    operationalRentEffort: 10,\n    interestCoverageRatio: 8,\n    debtRatio: 45\n  },\n  services: {\n    sales: 800000,\n    cogs: 320000,\n    grossProfit: 480000,\n    opCosts: 280000,\n    operationalProfit: 200000,\n    interest: 20000,\n    taxes: 40000,\n    netProfit: 140000,\n    grossMargin: 60,\n    operationalMargin: 25,\n    netMargin: 15,\n    rentEffortRatio: 8,\n    operationalRentEffort: 20,\n    interestCoverageRatio: 10,\n    debtRatio: 30\n  },\n  technology: {\n    sales: 1500000,\n    cogs: 450000,\n    grossProfit: 1050000,\n    opCosts: 600000,\n    operationalProfit: 450000,\n    interest: 40000,\n    taxes: 100000,\n    netProfit: 310000,\n    grossMargin: 70,\n    operationalMargin: 30,\n    netMargin: 18,\n    rentEffortRatio: 6,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 12,\n    debtRatio: 25\n  },\n  food: {\n    sales: 600000,\n    cogs: 330000,\n    grossProfit: 270000,\n    opCosts: 180000,\n    operationalProfit: 90000,\n    interest: 15000,\n    taxes: 20000,\n    netProfit: 55000,\n    grossMargin: 45,\n    operationalMargin: 15,\n    netMargin: 7,\n    rentEffortRatio: 7,\n    operationalRentEffort: 18,\n    interestCoverageRatio: 4,\n    debtRatio: 50\n  },\n  construction: {\n    sales: 2000000,\n    cogs: 1400000,\n    grossProfit: 600000,\n    opCosts: 360000,\n    operationalProfit: 240000,\n    interest: 60000,\n    taxes: 80000,\n    netProfit: 100000,\n    grossMargin: 30,\n    operationalMargin: 12,\n    netMargin: 6,\n    rentEffortRatio: 4,\n    operationalRentEffort: 12,\n    interestCoverageRatio: 3,\n    debtRatio: 60\n  },\n  // Valor padrão para setores não especificados\n  default: {\n    sales: 1000000,\n    cogs: 600000,\n    grossProfit: 400000,\n    opCosts: 200000,\n    operationalProfit: 200000,\n    interest: 25000,\n    taxes: 45000,\n    netProfit: 130000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 6,\n    debtRatio: 40\n  }\n};\nconst Diagnosis = () => {\n  _s();\n  var _kpis$selectedYear, _growthRates$selected, _growthRates$selected2, _growthRates$selected3, _kpis$selectedYear2, _kpis$selectedYear3, _growthRates$selected4, _growthRates$selected5, _growthRates$selected6, _kpis$selectedYear4, _kpis$selectedYear5, _kpis$selectedYear6, _growthRates$selected7, _growthRates$selected8, _growthRates$selected9, _kpis$selectedYear7, _kpis$selectedYear8, _kpis$selectedYear9, _kpis$selectedYear10, _growthRates$selected10, _growthRates$selected11, _growthRates$selected12, _kpis$selectedYear11, _kpis$selectedYear12, _kpis$selectedYear13, _kpis$selectedYear14, _kpis$selectedYear15;\n  const [yearData, setYearData] = useState({\n    2023: null,\n    2024: null,\n    2025: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [kpis, setKpis] = useState({\n    2023: {},\n    2024: {},\n    2025: {}\n  });\n  const [sectorAvg, setSectorAvg] = useState(null);\n  const [growthRates, setGrowthRates] = useState({\n    2024: {},\n    // Crescimento de 2023 para 2024\n    2025: {} // Crescimento de 2024 para 2025\n  });\n  const [selectedYear, setSelectedYear] = useState(2025);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Recuperar dados do localStorage\n    const data2023 = localStorage.getItem('data2023');\n    const data2024 = localStorage.getItem('data2024');\n    const data2025 = localStorage.getItem('registrationFormData');\n    if (data2025) {\n      const parsedData2025 = JSON.parse(data2025);\n      const parsedData2024 = data2024 ? JSON.parse(data2024) : null;\n      const parsedData2023 = data2023 ? JSON.parse(data2023) : null;\n      setYearData({\n        2023: parsedData2023,\n        2024: parsedData2024,\n        2025: parsedData2025\n      });\n\n      // Calcular KPIs para todos os anos\n      if (parsedData2023) calculateKPIs(parsedData2023, 2023);\n      if (parsedData2024) calculateKPIs(parsedData2024, 2024);\n      calculateKPIs(parsedData2025, 2025);\n\n      // Calcular taxas de crescimento\n      if (parsedData2023 && parsedData2024) {\n        calculateGrowthRates(parsedData2023, parsedData2024, 2024);\n      }\n      if (parsedData2024 && parsedData2025) {\n        calculateGrowthRates(parsedData2024, parsedData2025, 2025);\n      }\n\n      // Definir médias do setor com base no setor do negócio\n      const sectorKey = getSectorKey(parsedData2025.businessSector);\n      setSectorAvg(sectorAverages[sectorKey] || sectorAverages.default);\n    } else {\n      // Redirecionar para o registro se não houver dados\n      navigate('/');\n    }\n    setLoading(false);\n  }, [navigate]);\n\n  // Função para mapear o ID do setor para a chave no objeto sectorAverages\n  const getSectorKey = sectorId => {\n    const sectorMap = {\n      'retail': 'retail',\n      'manufacturing': 'manufacturing',\n      'services': 'services',\n      'technology': 'technology',\n      'food': 'food',\n      'construction': 'construction'\n    };\n    return sectorMap[sectorId] || 'default';\n  };\n\n  // Calcular taxas de crescimento\n  const calculateGrowthRates = (prevYearData, currentYearData, year) => {\n    const calculateGrowth = (current, previous) => {\n      if (!previous || previous === 0) return 'N/A';\n      return ((current - previous) / previous * 100).toFixed(2);\n    };\n\n    // Converter strings para números\n    const prevSales = parseFloat(prevYearData.sales) || 0;\n    const currentSales = parseFloat(currentYearData.sales) || 0;\n    const prevCogs = parseFloat(prevYearData.costOfGoodsSold) || 0;\n    const currentCogs = parseFloat(currentYearData.costOfGoodsSold) || 0;\n    const prevOpCosts = parseFloat(prevYearData.operationalCosts) || 0;\n    const currentOpCosts = parseFloat(currentYearData.operationalCosts) || 0;\n    const prevInterest = parseFloat(prevYearData.interest) || 0;\n    const currentInterest = parseFloat(currentYearData.interest) || 0;\n    const prevTaxes = parseFloat(prevYearData.taxes) || 0;\n    const currentTaxes = parseFloat(currentYearData.taxes) || 0;\n\n    // Calcular lucros para ambos os anos\n    const prevGrossProfit = prevSales - prevCogs;\n    const currentGrossProfit = currentSales - currentCogs;\n    const prevOperationalProfit = prevGrossProfit - prevOpCosts;\n    const currentOperationalProfit = currentGrossProfit - currentOpCosts;\n    const prevNetProfit = prevOperationalProfit - prevInterest - prevTaxes;\n    const currentNetProfit = currentOperationalProfit - currentInterest - currentTaxes;\n\n    // Calcular taxas de crescimento\n    setGrowthRates(prev => ({\n      ...prev,\n      [year]: {\n        sales: calculateGrowth(currentSales, prevSales),\n        grossProfit: calculateGrowth(currentGrossProfit, prevGrossProfit),\n        operationalProfit: calculateGrowth(currentOperationalProfit, prevOperationalProfit),\n        netProfit: calculateGrowth(currentNetProfit, prevNetProfit)\n      }\n    }));\n  };\n  const calculateKPIs = (data, year) => {\n    // Converter strings para números para cálculos\n    const sales = parseFloat(data.sales) || 0;\n    const cogs = parseFloat(data.costOfGoodsSold) || 0;\n    const opCosts = parseFloat(data.operationalCosts) || 0;\n    const interest = parseFloat(data.interest) || 0;\n    const taxes = parseFloat(data.taxes) || 0;\n    const debt = parseFloat(data.debt) || 0;\n    const assets = parseFloat(data.assets) || 0;\n    const rentPrice = parseFloat(data.rentPrice) || 0;\n\n    // Cálculos de KPIs\n    const grossProfit = sales - cogs;\n    const operationalProfit = grossProfit - opCosts;\n    const netProfit = operationalProfit - interest - taxes;\n    const calculatedKpis = {\n      // Valores absolutos\n      sales,\n      cogs,\n      grossProfit,\n      opCosts,\n      operationalProfit,\n      interest,\n      taxes,\n      netProfit,\n      // Margens\n      grossMargin: sales > 0 ? (grossProfit / sales * 100).toFixed(2) : 0,\n      operationalMargin: sales > 0 ? (operationalProfit / sales * 100).toFixed(2) : 0,\n      netMargin: sales > 0 ? (netProfit / sales * 100).toFixed(2) : 0,\n      // Indicadores\n      rentEffortRatio: sales > 0 ? (rentPrice * 12 / sales * 100).toFixed(2) : 0,\n      operationalRentEffort: opCosts > 0 ? (rentPrice * 12 / opCosts * 100).toFixed(2) : 0,\n      interestCoverageRatio: interest > 0 ? (operationalProfit / interest).toFixed(2) : 'N/A',\n      debtRatio: assets > 0 ? (debt / assets * 100).toFixed(2) : 0\n    };\n    setKpis(prev => ({\n      ...prev,\n      [year]: calculatedKpis\n    }));\n  };\n\n  // Preparar dados para o gráfico de evolução financeira\n  const prepareFinancialEvolutionData = () => {\n    var _kpis$, _kpis$2, _kpis$3, _kpis$4, _kpis$5, _kpis$6, _kpis$7, _kpis$8, _kpis$9, _kpis$10, _kpis$11, _kpis$12;\n    return {\n      labels: ['Vendas', 'Lucro Bruto', 'Lucro Operacional', 'Lucro Líquido'],\n      datasets: [{\n        label: '2023',\n        data: [((_kpis$ = kpis[2023]) === null || _kpis$ === void 0 ? void 0 : _kpis$.sales) || 0, ((_kpis$2 = kpis[2023]) === null || _kpis$2 === void 0 ? void 0 : _kpis$2.grossProfit) || 0, ((_kpis$3 = kpis[2023]) === null || _kpis$3 === void 0 ? void 0 : _kpis$3.operationalProfit) || 0, ((_kpis$4 = kpis[2023]) === null || _kpis$4 === void 0 ? void 0 : _kpis$4.netProfit) || 0],\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }, {\n        label: '2024',\n        data: [((_kpis$5 = kpis[2024]) === null || _kpis$5 === void 0 ? void 0 : _kpis$5.sales) || 0, ((_kpis$6 = kpis[2024]) === null || _kpis$6 === void 0 ? void 0 : _kpis$6.grossProfit) || 0, ((_kpis$7 = kpis[2024]) === null || _kpis$7 === void 0 ? void 0 : _kpis$7.operationalProfit) || 0, ((_kpis$8 = kpis[2024]) === null || _kpis$8 === void 0 ? void 0 : _kpis$8.netProfit) || 0],\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1\n      }, {\n        label: '2025',\n        data: [((_kpis$9 = kpis[2025]) === null || _kpis$9 === void 0 ? void 0 : _kpis$9.sales) || 0, ((_kpis$10 = kpis[2025]) === null || _kpis$10 === void 0 ? void 0 : _kpis$10.grossProfit) || 0, ((_kpis$11 = kpis[2025]) === null || _kpis$11 === void 0 ? void 0 : _kpis$11.operationalProfit) || 0, ((_kpis$12 = kpis[2025]) === null || _kpis$12 === void 0 ? void 0 : _kpis$12.netProfit) || 0],\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n\n  // Preparar dados para o gráfico de indicadores vs. média do setor\n  const prepareIndicatorsData = year => {\n    var _kpis$year, _kpis$year2, _kpis$year3, _kpis$year4;\n    return {\n      labels: ['Margem Bruta', 'Margem Operacional', 'Margem Líquida', 'Taxa de Esforço'],\n      datasets: [{\n        label: 'Sua Empresa',\n        data: [((_kpis$year = kpis[year]) === null || _kpis$year === void 0 ? void 0 : _kpis$year.grossMargin) || 0, ((_kpis$year2 = kpis[year]) === null || _kpis$year2 === void 0 ? void 0 : _kpis$year2.operationalMargin) || 0, ((_kpis$year3 = kpis[year]) === null || _kpis$year3 === void 0 ? void 0 : _kpis$year3.netMargin) || 0, ((_kpis$year4 = kpis[year]) === null || _kpis$year4 === void 0 ? void 0 : _kpis$year4.rentEffortRatio) || 0],\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1\n      }, {\n        label: 'Média do Setor',\n        data: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.grossMargin) || 0, (sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalMargin) || 0, (sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.netMargin) || 0, (sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.rentEffortRatio) || 0],\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n\n  // Opções para o gráfico de evolução financeira\n  const evolutionChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: value => formatCurrency(value)\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Evolução Financeira'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `${context.dataset.label}: ${formatCurrency(context.raw)}`;\n          }\n        }\n      }\n    }\n  };\n\n  // Opções para o gráfico de indicadores\n  const indicatorChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: value => `${value}%`\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Indicadores vs. Média do Setor'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `${context.dataset.label}: ${context.raw}%`;\n          }\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: \"A carregar a an\\xE1lise...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 12\n    }, this);\n  }\n  if (!yearData[2025]) {\n    return /*#__PURE__*/_jsxDEV(ErrorContainer, {\n      children: \"N\\xE3o foram encontrados dados de registo. Por favor, complete o registo primeiro.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Determinar o ano anterior para comparação\n  const previousYear = selectedYear === 2023 ? null : selectedYear - 1;\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(DiagnosisTitle, {\n        children: \"An\\xE1lise da Sua Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YearTabs, {\n        children: [/*#__PURE__*/_jsxDEV(YearTab, {\n          active: selectedYear === 2023,\n          onClick: () => setSelectedYear(2023),\n          disabled: !yearData[2023],\n          children: \"2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YearTab, {\n          active: selectedYear === 2024,\n          onClick: () => setSelectedYear(2024),\n          disabled: !yearData[2024],\n          children: \"2024\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YearTab, {\n          active: selectedYear === 2025,\n          onClick: () => setSelectedYear(2025),\n          children: \"2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Evolu\\xE7\\xE3o Financeira\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: prepareFinancialEvolutionData(),\n            options: evolutionChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [\"Resumo Financeiro - \", selectedYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinancialSummary, {\n          children: [/*#__PURE__*/_jsxDEV(SummaryTable, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9trica\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9dia do Setor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Crescimento vs. \", previousYear]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Vendas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear = kpis[selectedYear]) === null || _kpis$selectedYear === void 0 ? void 0 : _kpis$selectedYear.sales) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.sales) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass((_growthRates$selected = growthRates[selectedYear]) === null || _growthRates$selected === void 0 ? void 0 : _growthRates$selected.sales),\n                  children: ((_growthRates$selected2 = growthRates[selectedYear]) === null || _growthRates$selected2 === void 0 ? void 0 : _growthRates$selected2.sales) !== 'N/A' ? `${(_growthRates$selected3 = growthRates[selectedYear]) === null || _growthRates$selected3 === void 0 ? void 0 : _growthRates$selected3.sales}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Custo da Mercadoria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear2 = kpis[selectedYear]) === null || _kpis$selectedYear2 === void 0 ? void 0 : _kpis$selectedYear2.cogs) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.cogs) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro Bruto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear3 = kpis[selectedYear]) === null || _kpis$selectedYear3 === void 0 ? void 0 : _kpis$selectedYear3.grossProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.grossProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass((_growthRates$selected4 = growthRates[selectedYear]) === null || _growthRates$selected4 === void 0 ? void 0 : _growthRates$selected4.grossProfit),\n                  children: ((_growthRates$selected5 = growthRates[selectedYear]) === null || _growthRates$selected5 === void 0 ? void 0 : _growthRates$selected5.grossProfit) !== 'N/A' ? `${(_growthRates$selected6 = growthRates[selectedYear]) === null || _growthRates$selected6 === void 0 ? void 0 : _growthRates$selected6.grossProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem Bruta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear4 = kpis[selectedYear]) === null || _kpis$selectedYear4 === void 0 ? void 0 : _kpis$selectedYear4.grossMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.grossMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Custos Operacionais\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear5 = kpis[selectedYear]) === null || _kpis$selectedYear5 === void 0 ? void 0 : _kpis$selectedYear5.opCosts) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.opCosts) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro Operacional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear6 = kpis[selectedYear]) === null || _kpis$selectedYear6 === void 0 ? void 0 : _kpis$selectedYear6.operationalProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass((_growthRates$selected7 = growthRates[selectedYear]) === null || _growthRates$selected7 === void 0 ? void 0 : _growthRates$selected7.operationalProfit),\n                  children: ((_growthRates$selected8 = growthRates[selectedYear]) === null || _growthRates$selected8 === void 0 ? void 0 : _growthRates$selected8.operationalProfit) !== 'N/A' ? `${(_growthRates$selected9 = growthRates[selectedYear]) === null || _growthRates$selected9 === void 0 ? void 0 : _growthRates$selected9.operationalProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem Operacional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear7 = kpis[selectedYear]) === null || _kpis$selectedYear7 === void 0 ? void 0 : _kpis$selectedYear7.operationalMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Juros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear8 = kpis[selectedYear]) === null || _kpis$selectedYear8 === void 0 ? void 0 : _kpis$selectedYear8.interest) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.interest) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Impostos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear9 = kpis[selectedYear]) === null || _kpis$selectedYear9 === void 0 ? void 0 : _kpis$selectedYear9.taxes) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.taxes) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"highlight\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Lucro L\\xEDquido\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency(((_kpis$selectedYear10 = kpis[selectedYear]) === null || _kpis$selectedYear10 === void 0 ? void 0 : _kpis$selectedYear10.netProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatCurrency((sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.netProfit) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: getGrowthClass((_growthRates$selected10 = growthRates[selectedYear]) === null || _growthRates$selected10 === void 0 ? void 0 : _growthRates$selected10.netProfit),\n                  children: ((_growthRates$selected11 = growthRates[selectedYear]) === null || _growthRates$selected11 === void 0 ? void 0 : _growthRates$selected11.netProfit) !== 'N/A' ? `${(_growthRates$selected12 = growthRates[selectedYear]) === null || _growthRates$selected12 === void 0 ? void 0 : _growthRates$selected12.netProfit}%` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"ratio\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Margem L\\xEDquida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear11 = kpis[selectedYear]) === null || _kpis$selectedYear11 === void 0 ? void 0 : _kpis$selectedYear11.netMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.netMargin) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this), previousYear && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Indicador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE9dia do Setor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Taxa de Esfor\\xE7o (Renda/Vendas)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear12 = kpis[selectedYear]) === null || _kpis$selectedYear12 === void 0 ? void 0 : _kpis$selectedYear12.rentEffortRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.rentEffortRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Renda/Custos Operacionais\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear13 = kpis[selectedYear]) === null || _kpis$selectedYear13 === void 0 ? void 0 : _kpis$selectedYear13.operationalRentEffort) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.operationalRentEffort) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"\\xCDndice de Cobertura de Juros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_kpis$selectedYear14 = kpis[selectedYear]) === null || _kpis$selectedYear14 === void 0 ? void 0 : _kpis$selectedYear14.interestCoverageRatio) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.interestCoverageRatio) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"D\\xEDvida/Ativo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [((_kpis$selectedYear15 = kpis[selectedYear]) === null || _kpis$selectedYear15 === void 0 ? void 0 : _kpis$selectedYear15.debtRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(sectorAvg === null || sectorAvg === void 0 ? void 0 : sectorAvg.debtRatio) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionCard, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [\"Indicadores Financeiros vs. M\\xE9dia do Setor - \", selectedYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: prepareIndicatorsData(selectedYear),\n            options: indicatorChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n\n// Função auxiliar para formatar valores monetários\n_s(Diagnosis, \"GkuYnVaZk6C3ujf5L/wsJ6GqKcw=\", false, function () {\n  return [useNavigate];\n});\n_c = Diagnosis;\nconst formatCurrency = value => {\n  return new Intl.NumberFormat('pt-PT', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Função para determinar a classe CSS com base na taxa de crescimento\nconst getGrowthClass = growthRate => {\n  if (growthRate === 'N/A') return '';\n  const rate = parseFloat(growthRate);\n  if (rate > 0) return 'positive-growth';\n  if (rate < 0) return 'negative-growth';\n  return '';\n};\n\n// Styled Components\nconst PageContainer = styled.div`\n  padding: 40px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n`;\n_c2 = PageContainer;\nconst MainContent = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c3 = MainContent;\nconst DiagnosisTitle = styled.h1`\n  color: #2c3e50;\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  font-family: 'Playfair Display', serif;\n`;\n_c4 = DiagnosisTitle;\nconst YearTabs = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  border-bottom: 1px solid #dfe6e9;\n`;\n_c5 = YearTabs;\nconst YearTab = styled.button`\n  padding: 15px 30px;\n  font-size: 18px;\n  font-weight: 600;\n  background-color: ${props => props.active ? '#3498db' : 'transparent'};\n  color: ${props => props.active ? 'white' : '#7f8c8d'};\n  border: none;\n  border-bottom: 3px solid ${props => props.active ? '#3498db' : 'transparent'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  transition: all 0.3s;\n  \n  &:hover:not(:disabled) {\n    background-color: ${props => props.active ? '#3498db' : '#f8f9fa'};\n    color: ${props => props.active ? 'white' : '#2c3e50'};\n  }\n  \n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n  \n  &:last-child {\n    border-top-right-radius: 8px;\n  }\n`;\n_c6 = YearTab;\nconst SectionCard = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  padding: 30px;\n  margin-bottom: 30px;\n`;\n_c7 = SectionCard;\nconst SectionTitle = styled.h2`\n  color: #2c3e50;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c8 = SectionTitle;\nconst ChartContainer = styled.div`\n  height: 400px;\n  margin-bottom: 20px;\n`;\n_c9 = ChartContainer;\nconst FinancialSummary = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c10 = FinancialSummary;\nconst SummaryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  \n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #ecf0f1;\n  }\n  \n  th {\n    background-color: #f8f9fa;\n    font-weight: 600;\n    color: #2c3e50;\n  }\n  \n  tr.highlight {\n    font-weight: 600;\n    background-color: #f1f8ff;\n  }\n  \n  tr.ratio {\n    font-style: italic;\n    color: #7f8c8d;\n  }\n  \n  td.positive-growth {\n    color: #27ae60;\n    font-weight: 600;\n  }\n  \n  td.negative-growth {\n    color: #e74c3c;\n    font-weight: 600;\n  }\n  \n  @media (min-width: 769px) {\n    flex: 1;\n  }\n`;\n_c11 = SummaryTable;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 24px;\n  color: #3498db;\n`;\n_c12 = LoadingContainer;\nconst ErrorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 20px;\n  color: #e74c3c;\n  text-align: center;\n  padding: 0 20px;\n`;\n_c13 = ErrorContainer;\nexport default Diagnosis;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Diagnosis\");\n$RefreshReg$(_c2, \"PageContainer\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"DiagnosisTitle\");\n$RefreshReg$(_c5, \"YearTabs\");\n$RefreshReg$(_c6, \"YearTab\");\n$RefreshReg$(_c7, \"SectionCard\");\n$RefreshReg$(_c8, \"SectionTitle\");\n$RefreshReg$(_c9, \"ChartContainer\");\n$RefreshReg$(_c10, \"FinancialSummary\");\n$RefreshReg$(_c11, \"SummaryTable\");\n$RefreshReg$(_c12, \"LoadingContainer\");\n$RefreshReg$(_c13, \"ErrorContainer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","sectorAverages","retail","sales","cogs","grossProfit","opCosts","operationalProfit","interest","taxes","netProfit","grossMargin","operationalMargin","netMargin","rentEffortRatio","operationalRentEffort","interestCoverageRatio","debtRatio","manufacturing","services","technology","food","construction","default","Diagnosis","_s","_kpis$selectedYear","_growthRates$selected","_growthRates$selected2","_growthRates$selected3","_kpis$selectedYear2","_kpis$selectedYear3","_growthRates$selected4","_growthRates$selected5","_growthRates$selected6","_kpis$selectedYear4","_kpis$selectedYear5","_kpis$selectedYear6","_growthRates$selected7","_growthRates$selected8","_growthRates$selected9","_kpis$selectedYear7","_kpis$selectedYear8","_kpis$selectedYear9","_kpis$selectedYear10","_growthRates$selected10","_growthRates$selected11","_growthRates$selected12","_kpis$selectedYear11","_kpis$selectedYear12","_kpis$selectedYear13","_kpis$selectedYear14","_kpis$selectedYear15","yearData","setYearData","loading","setLoading","kpis","setKpis","sectorAvg","setSectorAvg","growthRates","setGrowthRates","selectedYear","setSelectedYear","navigate","data2023","localStorage","getItem","data2024","data2025","parsedData2025","JSON","parse","parsedData2024","parsedData2023","calculateKPIs","calculateGrowthRates","sectorKey","getSectorKey","businessSector","sectorId","sectorMap","prevYearData","currentYearData","year","calculateGrowth","current","previous","toFixed","prevSales","parseFloat","currentSales","prevCogs","costOfGoodsSold","currentCogs","prevOpCosts","operationalCosts","currentOpCosts","prevInterest","currentInterest","prevTaxes","currentTaxes","prevGrossProfit","currentGrossProfit","prevOperationalProfit","currentOperationalProfit","prevNetProfit","currentNetProfit","prev","data","debt","assets","rentPrice","calculatedKpis","prepareFinancialEvolutionData","_kpis$","_kpis$2","_kpis$3","_kpis$4","_kpis$5","_kpis$6","_kpis$7","_kpis$8","_kpis$9","_kpis$10","_kpis$11","_kpis$12","labels","datasets","label","backgroundColor","borderColor","borderWidth","prepareIndicatorsData","_kpis$year","_kpis$year2","_kpis$year3","_kpis$year4","evolutionChartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","ticks","callback","value","formatCurrency","plugins","legend","position","title","display","text","tooltip","callbacks","context","dataset","raw","indicatorChartOptions","LoadingContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","ErrorContainer","previousYear","PageContainer","MainContent","DiagnosisTitle","YearTabs","YearTab","active","onClick","disabled","SectionCard","SectionTitle","ChartContainer","options","FinancialSummary","SummaryTable","className","getGrowthClass","_c","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","growthRate","rate","div","_c2","main","_c3","h1","_c4","_c5","button","props","_c6","_c7","h2","_c8","_c9","_c10","table","_c11","_c12","_c13","$RefreshReg$"],"sources":["/Users/iliyanhabibo/Desktop/JBC/src/pages/Diagnosis.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  Tooltip, \n  Legend \n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrar os componentes do Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Médias do setor (hardcoded para demonstração)\nconst sectorAverages = {\n  retail: {\n    sales: 500000,\n    cogs: 325000,\n    grossProfit: 175000,\n    opCosts: 100000,\n    operationalProfit: 75000,\n    interest: 10000,\n    taxes: 15000,\n    netProfit: 50000,\n    grossMargin: 35,\n    operationalMargin: 18,\n    netMargin: 8,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 5,\n    debtRatio: 40\n  },\n  manufacturing: {\n    sales: 1200000,\n    cogs: 720000,\n    grossProfit: 480000,\n    opCosts: 240000,\n    operationalProfit: 240000,\n    interest: 30000,\n    taxes: 50000,\n    netProfit: 160000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 3,\n    operationalRentEffort: 10,\n    interestCoverageRatio: 8,\n    debtRatio: 45\n  },\n  services: {\n    sales: 800000,\n    cogs: 320000,\n    grossProfit: 480000,\n    opCosts: 280000,\n    operationalProfit: 200000,\n    interest: 20000,\n    taxes: 40000,\n    netProfit: 140000,\n    grossMargin: 60,\n    operationalMargin: 25,\n    netMargin: 15,\n    rentEffortRatio: 8,\n    operationalRentEffort: 20,\n    interestCoverageRatio: 10,\n    debtRatio: 30\n  },\n  technology: {\n    sales: 1500000,\n    cogs: 450000,\n    grossProfit: 1050000,\n    opCosts: 600000,\n    operationalProfit: 450000,\n    interest: 40000,\n    taxes: 100000,\n    netProfit: 310000,\n    grossMargin: 70,\n    operationalMargin: 30,\n    netMargin: 18,\n    rentEffortRatio: 6,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 12,\n    debtRatio: 25\n  },\n  food: {\n    sales: 600000,\n    cogs: 330000,\n    grossProfit: 270000,\n    opCosts: 180000,\n    operationalProfit: 90000,\n    interest: 15000,\n    taxes: 20000,\n    netProfit: 55000,\n    grossMargin: 45,\n    operationalMargin: 15,\n    netMargin: 7,\n    rentEffortRatio: 7,\n    operationalRentEffort: 18,\n    interestCoverageRatio: 4,\n    debtRatio: 50\n  },\n  construction: {\n    sales: 2000000,\n    cogs: 1400000,\n    grossProfit: 600000,\n    opCosts: 360000,\n    operationalProfit: 240000,\n    interest: 60000,\n    taxes: 80000,\n    netProfit: 100000,\n    grossMargin: 30,\n    operationalMargin: 12,\n    netMargin: 6,\n    rentEffortRatio: 4,\n    operationalRentEffort: 12,\n    interestCoverageRatio: 3,\n    debtRatio: 60\n  },\n  // Valor padrão para setores não especificados\n  default: {\n    sales: 1000000,\n    cogs: 600000,\n    grossProfit: 400000,\n    opCosts: 200000,\n    operationalProfit: 200000,\n    interest: 25000,\n    taxes: 45000,\n    netProfit: 130000,\n    grossMargin: 40,\n    operationalMargin: 20,\n    netMargin: 10,\n    rentEffortRatio: 5,\n    operationalRentEffort: 15,\n    interestCoverageRatio: 6,\n    debtRatio: 40\n  }\n};\n\nconst Diagnosis = () => {\n  const [yearData, setYearData] = useState({\n    2023: null,\n    2024: null,\n    2025: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [kpis, setKpis] = useState({\n    2023: {},\n    2024: {},\n    2025: {}\n  });\n  const [sectorAvg, setSectorAvg] = useState(null);\n  const [growthRates, setGrowthRates] = useState({\n    2024: {}, // Crescimento de 2023 para 2024\n    2025: {}  // Crescimento de 2024 para 2025\n  });\n  const [selectedYear, setSelectedYear] = useState(2025);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Recuperar dados do localStorage\n    const data2023 = localStorage.getItem('data2023');\n    const data2024 = localStorage.getItem('data2024');\n    const data2025 = localStorage.getItem('registrationFormData');\n    \n    if (data2025) {\n      const parsedData2025 = JSON.parse(data2025);\n      const parsedData2024 = data2024 ? JSON.parse(data2024) : null;\n      const parsedData2023 = data2023 ? JSON.parse(data2023) : null;\n      \n      setYearData({\n        2023: parsedData2023,\n        2024: parsedData2024,\n        2025: parsedData2025\n      });\n      \n      // Calcular KPIs para todos os anos\n      if (parsedData2023) calculateKPIs(parsedData2023, 2023);\n      if (parsedData2024) calculateKPIs(parsedData2024, 2024);\n      calculateKPIs(parsedData2025, 2025);\n      \n      // Calcular taxas de crescimento\n      if (parsedData2023 && parsedData2024) {\n        calculateGrowthRates(parsedData2023, parsedData2024, 2024);\n      }\n      \n      if (parsedData2024 && parsedData2025) {\n        calculateGrowthRates(parsedData2024, parsedData2025, 2025);\n      }\n      \n      // Definir médias do setor com base no setor do negócio\n      const sectorKey = getSectorKey(parsedData2025.businessSector);\n      setSectorAvg(sectorAverages[sectorKey] || sectorAverages.default);\n    } else {\n      // Redirecionar para o registro se não houver dados\n      navigate('/');\n    }\n    \n    setLoading(false);\n  }, [navigate]);\n\n  // Função para mapear o ID do setor para a chave no objeto sectorAverages\n  const getSectorKey = (sectorId) => {\n    const sectorMap = {\n      'retail': 'retail',\n      'manufacturing': 'manufacturing',\n      'services': 'services',\n      'technology': 'technology',\n      'food': 'food',\n      'construction': 'construction'\n    };\n    \n    return sectorMap[sectorId] || 'default';\n  };\n\n  // Calcular taxas de crescimento\n  const calculateGrowthRates = (prevYearData, currentYearData, year) => {\n    const calculateGrowth = (current, previous) => {\n      if (!previous || previous === 0) return 'N/A';\n      return (((current - previous) / previous) * 100).toFixed(2);\n    };\n    \n    // Converter strings para números\n    const prevSales = parseFloat(prevYearData.sales) || 0;\n    const currentSales = parseFloat(currentYearData.sales) || 0;\n    \n    const prevCogs = parseFloat(prevYearData.costOfGoodsSold) || 0;\n    const currentCogs = parseFloat(currentYearData.costOfGoodsSold) || 0;\n    \n    const prevOpCosts = parseFloat(prevYearData.operationalCosts) || 0;\n    const currentOpCosts = parseFloat(currentYearData.operationalCosts) || 0;\n    \n    const prevInterest = parseFloat(prevYearData.interest) || 0;\n    const currentInterest = parseFloat(currentYearData.interest) || 0;\n    \n    const prevTaxes = parseFloat(prevYearData.taxes) || 0;\n    const currentTaxes = parseFloat(currentYearData.taxes) || 0;\n    \n    // Calcular lucros para ambos os anos\n    const prevGrossProfit = prevSales - prevCogs;\n    const currentGrossProfit = currentSales - currentCogs;\n    \n    const prevOperationalProfit = prevGrossProfit - prevOpCosts;\n    const currentOperationalProfit = currentGrossProfit - currentOpCosts;\n    \n    const prevNetProfit = prevOperationalProfit - prevInterest - prevTaxes;\n    const currentNetProfit = currentOperationalProfit - currentInterest - currentTaxes;\n    \n    // Calcular taxas de crescimento\n    setGrowthRates(prev => ({\n      ...prev,\n      [year]: {\n        sales: calculateGrowth(currentSales, prevSales),\n        grossProfit: calculateGrowth(currentGrossProfit, prevGrossProfit),\n        operationalProfit: calculateGrowth(currentOperationalProfit, prevOperationalProfit),\n        netProfit: calculateGrowth(currentNetProfit, prevNetProfit)\n      }\n    }));\n  };\n\n  const calculateKPIs = (data, year) => {\n    // Converter strings para números para cálculos\n    const sales = parseFloat(data.sales) || 0;\n    const cogs = parseFloat(data.costOfGoodsSold) || 0;\n    const opCosts = parseFloat(data.operationalCosts) || 0;\n    const interest = parseFloat(data.interest) || 0;\n    const taxes = parseFloat(data.taxes) || 0;\n    const debt = parseFloat(data.debt) || 0;\n    const assets = parseFloat(data.assets) || 0;\n    const rentPrice = parseFloat(data.rentPrice) || 0;\n\n    // Cálculos de KPIs\n    const grossProfit = sales - cogs;\n    const operationalProfit = grossProfit - opCosts;\n    const netProfit = operationalProfit - interest - taxes;\n\n    const calculatedKpis = {\n      // Valores absolutos\n      sales,\n      cogs,\n      grossProfit,\n      opCosts,\n      operationalProfit,\n      interest,\n      taxes,\n      netProfit,\n      \n      // Margens\n      grossMargin: sales > 0 ? (grossProfit / sales * 100).toFixed(2) : 0,\n      operationalMargin: sales > 0 ? (operationalProfit / sales * 100).toFixed(2) : 0,\n      netMargin: sales > 0 ? (netProfit / sales * 100).toFixed(2) : 0,\n      \n      // Indicadores\n      rentEffortRatio: sales > 0 ? ((rentPrice * 12) / sales * 100).toFixed(2) : 0,\n      operationalRentEffort: opCosts > 0 ? ((rentPrice * 12) / opCosts * 100).toFixed(2) : 0,\n      interestCoverageRatio: interest > 0 ? (operationalProfit / interest).toFixed(2) : 'N/A',\n      debtRatio: assets > 0 ? (debt / assets * 100).toFixed(2) : 0\n    };\n    \n    setKpis(prev => ({\n      ...prev,\n      [year]: calculatedKpis\n    }));\n  };\n\n  // Preparar dados para o gráfico de evolução financeira\n  const prepareFinancialEvolutionData = () => {\n    return {\n      labels: ['Vendas', 'Lucro Bruto', 'Lucro Operacional', 'Lucro Líquido'],\n      datasets: [\n        {\n          label: '2023',\n          data: [\n            kpis[2023]?.sales || 0,\n            kpis[2023]?.grossProfit || 0,\n            kpis[2023]?.operationalProfit || 0,\n            kpis[2023]?.netProfit || 0\n          ],\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        },\n        {\n          label: '2024',\n          data: [\n            kpis[2024]?.sales || 0,\n            kpis[2024]?.grossProfit || 0,\n            kpis[2024]?.operationalProfit || 0,\n            kpis[2024]?.netProfit || 0\n          ],\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        },\n        {\n          label: '2025',\n          data: [\n            kpis[2025]?.sales || 0,\n            kpis[2025]?.grossProfit || 0,\n            kpis[2025]?.operationalProfit || 0,\n            kpis[2025]?.netProfit || 0\n          ],\n          backgroundColor: 'rgba(255, 99, 132, 0.6)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  // Preparar dados para o gráfico de indicadores vs. média do setor\n  const prepareIndicatorsData = (year) => {\n    return {\n      labels: ['Margem Bruta', 'Margem Operacional', 'Margem Líquida', 'Taxa de Esforço'],\n      datasets: [\n        {\n          label: 'Sua Empresa',\n          data: [\n            kpis[year]?.grossMargin || 0,\n            kpis[year]?.operationalMargin || 0,\n            kpis[year]?.netMargin || 0,\n            kpis[year]?.rentEffortRatio || 0\n          ],\n          backgroundColor: 'rgba(255, 99, 132, 0.6)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1\n        },\n        {\n          label: 'Média do Setor',\n          data: [\n            sectorAvg?.grossMargin || 0,\n            sectorAvg?.operationalMargin || 0,\n            sectorAvg?.netMargin || 0,\n            sectorAvg?.rentEffortRatio || 0\n          ],\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  // Opções para o gráfico de evolução financeira\n  const evolutionChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: (value) => formatCurrency(value)\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Evolução Financeira'\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            return `${context.dataset.label}: ${formatCurrency(context.raw)}`;\n          }\n        }\n      }\n    }\n  };\n\n  // Opções para o gráfico de indicadores\n  const indicatorChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: (value) => `${value}%`\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Indicadores vs. Média do Setor'\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            return `${context.dataset.label}: ${context.raw}%`;\n          }\n        }\n      }\n    }\n  };\n\n  if (loading) {\n    return <LoadingContainer>A carregar a análise...</LoadingContainer>;\n  }\n\n  if (!yearData[2025]) {\n    return <ErrorContainer>Não foram encontrados dados de registo. Por favor, complete o registo primeiro.</ErrorContainer>;\n  }\n\n  // Determinar o ano anterior para comparação\n  const previousYear = selectedYear === 2023 ? null : selectedYear - 1;\n  \n  return (\n    <PageContainer>\n      <MainContent>\n        <DiagnosisTitle>Análise da Sua Empresa</DiagnosisTitle>\n        \n        <YearTabs>\n          <YearTab \n            active={selectedYear === 2023} \n            onClick={() => setSelectedYear(2023)}\n            disabled={!yearData[2023]}\n          >\n            2023\n          </YearTab>\n          <YearTab \n            active={selectedYear === 2024} \n            onClick={() => setSelectedYear(2024)}\n            disabled={!yearData[2024]}\n          >\n            2024\n          </YearTab>\n          <YearTab \n            active={selectedYear === 2025} \n            onClick={() => setSelectedYear(2025)}\n          >\n            2025\n          </YearTab>\n        </YearTabs>\n        \n        <SectionCard>\n          <SectionTitle>Evolução Financeira</SectionTitle>\n          <ChartContainer>\n            <Bar data={prepareFinancialEvolutionData()} options={evolutionChartOptions} />\n          </ChartContainer>\n        </SectionCard>\n        \n        <SectionCard>\n          <SectionTitle>Resumo Financeiro - {selectedYear}</SectionTitle>\n          <FinancialSummary>\n            <SummaryTable>\n              <thead>\n                <tr>\n                  <th>Métrica</th>\n                  <th>Valor</th>\n                  <th>Média do Setor</th>\n                  {previousYear && <th>Crescimento vs. {previousYear}</th>}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Vendas</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.sales || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.sales || 0)}</td>\n                  {previousYear && (\n                    <td className={getGrowthClass(growthRates[selectedYear]?.sales)}>\n                      {growthRates[selectedYear]?.sales !== 'N/A' ? `${growthRates[selectedYear]?.sales}%` : 'N/A'}\n                    </td>\n                  )}\n                </tr>\n                <tr>\n                  <td>Custo da Mercadoria</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.cogs || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.cogs || 0)}</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Bruto</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.grossProfit || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.grossProfit || 0)}</td>\n                  {previousYear && (\n                    <td className={getGrowthClass(growthRates[selectedYear]?.grossProfit)}>\n                      {growthRates[selectedYear]?.grossProfit !== 'N/A' ? `${growthRates[selectedYear]?.grossProfit}%` : 'N/A'}\n                    </td>\n                  )}\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Bruta</td>\n                  <td>{kpis[selectedYear]?.grossMargin || 0}%</td>\n                  <td>{sectorAvg?.grossMargin || 0}%</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr>\n                  <td>Custos Operacionais</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.opCosts || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.opCosts || 0)}</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Operacional</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.operationalProfit || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.operationalProfit || 0)}</td>\n                  {previousYear && (\n                    <td className={getGrowthClass(growthRates[selectedYear]?.operationalProfit)}>\n                      {growthRates[selectedYear]?.operationalProfit !== 'N/A' ? `${growthRates[selectedYear]?.operationalProfit}%` : 'N/A'}\n                    </td>\n                  )}\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Operacional</td>\n                  <td>{kpis[selectedYear]?.operationalMargin || 0}%</td>\n                  <td>{sectorAvg?.operationalMargin || 0}%</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr>\n                  <td>Juros</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.interest || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.interest || 0)}</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr>\n                  <td>Impostos</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.taxes || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.taxes || 0)}</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n                <tr className=\"highlight\">\n                  <td>Lucro Líquido</td>\n                  <td>{formatCurrency(kpis[selectedYear]?.netProfit || 0)}</td>\n                  <td>{formatCurrency(sectorAvg?.netProfit || 0)}</td>\n                  {previousYear && (\n                    <td className={getGrowthClass(growthRates[selectedYear]?.netProfit)}>\n                      {growthRates[selectedYear]?.netProfit !== 'N/A' ? `${growthRates[selectedYear]?.netProfit}%` : 'N/A'}\n                    </td>\n                  )}\n                </tr>\n                <tr className=\"ratio\">\n                  <td>Margem Líquida</td>\n                  <td>{kpis[selectedYear]?.netMargin || 0}%</td>\n                  <td>{sectorAvg?.netMargin || 0}%</td>\n                  {previousYear && <td>-</td>}\n                </tr>\n              </tbody>\n            </SummaryTable>\n            \n            <SummaryTable>\n              <thead>\n                <tr>\n                  <th>Indicador</th>\n                  <th>Valor</th>\n                  <th>Média do Setor</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Taxa de Esforço (Renda/Vendas)</td>\n                  <td>{kpis[selectedYear]?.rentEffortRatio || 0}%</td>\n                  <td>{sectorAvg?.rentEffortRatio || 0}%</td>\n                </tr>\n                <tr>\n                  <td>Renda/Custos Operacionais</td>\n                  <td>{kpis[selectedYear]?.operationalRentEffort || 0}%</td>\n                  <td>{sectorAvg?.operationalRentEffort || 0}%</td>\n                </tr>\n                <tr>\n                  <td>Índice de Cobertura de Juros</td>\n                  <td>{kpis[selectedYear]?.interestCoverageRatio || 0}</td>\n                  <td>{sectorAvg?.interestCoverageRatio || 0}</td>\n                </tr>\n                <tr>\n                  <td>Dívida/Ativo</td>\n                  <td>{kpis[selectedYear]?.debtRatio || 0}%</td>\n                  <td>{sectorAvg?.debtRatio || 0}%</td>\n                </tr>\n              </tbody>\n            </SummaryTable>\n          </FinancialSummary>\n        </SectionCard>\n        \n        <SectionCard>\n          <SectionTitle>Indicadores Financeiros vs. Média do Setor - {selectedYear}</SectionTitle>\n          <ChartContainer>\n            <Bar data={prepareIndicatorsData(selectedYear)} options={indicatorChartOptions} />\n          </ChartContainer>\n        </SectionCard>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\n// Função auxiliar para formatar valores monetários\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('pt-PT', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Função para determinar a classe CSS com base na taxa de crescimento\nconst getGrowthClass = (growthRate) => {\n  if (growthRate === 'N/A') return '';\n  const rate = parseFloat(growthRate);\n  if (rate > 0) return 'positive-growth';\n  if (rate < 0) return 'negative-growth';\n  return '';\n};\n\n// Styled Components\nconst PageContainer = styled.div`\n  padding: 40px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst DiagnosisTitle = styled.h1`\n  color: #2c3e50;\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  font-family: 'Playfair Display', serif;\n`;\n\nconst YearTabs = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  border-bottom: 1px solid #dfe6e9;\n`;\n\nconst YearTab = styled.button`\n  padding: 15px 30px;\n  font-size: 18px;\n  font-weight: 600;\n  background-color: ${props => props.active ? '#3498db' : 'transparent'};\n  color: ${props => props.active ? 'white' : '#7f8c8d'};\n  border: none;\n  border-bottom: 3px solid ${props => props.active ? '#3498db' : 'transparent'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  transition: all 0.3s;\n  \n  &:hover:not(:disabled) {\n    background-color: ${props => props.active ? '#3498db' : '#f8f9fa'};\n    color: ${props => props.active ? 'white' : '#2c3e50'};\n  }\n  \n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n  \n  &:last-child {\n    border-top-right-radius: 8px;\n  }\n`;\n\nconst SectionCard = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  padding: 30px;\n  margin-bottom: 30px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #2c3e50;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst ChartContainer = styled.div`\n  height: 400px;\n  margin-bottom: 20px;\n`;\n\nconst FinancialSummary = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SummaryTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  \n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #ecf0f1;\n  }\n  \n  th {\n    background-color: #f8f9fa;\n    font-weight: 600;\n    color: #2c3e50;\n  }\n  \n  tr.highlight {\n    font-weight: 600;\n    background-color: #f1f8ff;\n  }\n  \n  tr.ratio {\n    font-style: italic;\n    color: #7f8c8d;\n  }\n  \n  td.positive-growth {\n    color: #27ae60;\n    font-weight: 600;\n  }\n  \n  td.negative-growth {\n    color: #e74c3c;\n    font-weight: 600;\n  }\n  \n  @media (min-width: 769px) {\n    flex: 1;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 24px;\n  color: #3498db;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 20px;\n  color: #e74c3c;\n  text-align: center;\n  padding: 0 20px;\n`;\n\nexport default Diagnosis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}